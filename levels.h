

void levels( int n, unsigned char l[], int start[]) {

/*
This function is called by hex_a_hop.cpp
Its purpose is to return a level, size, and start location of Hex-a-hop

n is a positive integer not greater than 100

l is the level map. The last values are ignored for small level maps.

start[2] is where you start on the map
   start[] = {row, column}

lSize[3] is the size of interesting part of l
   lSize[] = {rows, columns, lSize[1]*lSize[2]/2}
or
   lSize[] = {rows, columns, lSize[1]*lSize[2]/2 + 1}
It is a global variable.

(c) 2019 Bradley Knockel


levels.h is basically a list of levels
Each level needs at least one blank column on each side and 2 blank rows
on each side or else Emi hops into oblivion. A few levels might need more
padding, and these levels are accompanied by comments. Please look at
levels 33 and 48 (especially 33) because I give ways to make Emi
jump off the screen in the game.

  0 is water
  1 is white
  2 is white elevated
  3 is green
  4 is green elevated
  5 is blue
  6 is blue elevated
  7 is yellow (laser)
  8 is purple (trampoline)
  9 is ice
  10 is red (spinner)
  11 is grey (builders)
  12 is boat
  13 is lift
  14 is lift elevated
  anti-ice adds 100
  jump adds 200


unsigned char Blank[] = 
   {
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0     };


For the following 100 levels,
  lSize[2] = lSize[0]*lSize[1]/2;
is true unless there is a remainder and first row has more than 2nd row.
That is, when the level "looks like an hourglass"...
  x x x
   x x
  x x x
In which case we need to add 1...
  lSize[2] = lSize[0]*lSize[1]/2 + 1;
*/



switch(n) {

case 1:

// 1: Mini Island
// start = {10,2};
start[0]=9;
start[1]=1;
lSize[0]=19;
lSize[1]=13;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     3 ,     0 ,    
    0 ,     0 ,     3 ,     3 ,     3 ,     3 ,     0 ,
        0 ,     3 ,     0 ,     3 ,     0 ,     3 ,    
    0 ,     0 ,     0 ,     0 ,     8 ,     3 ,     0 ,
        0 ,     3 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     3 ,     0 ,     8 ,     3 ,     3 ,     0 ,
        1 ,     8 ,     1 ,     0 ,     0 ,     0 ,    
    0 ,     3 ,     0 ,     8 ,     3 ,     3 ,     0 ,
        0 ,     3 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     8 ,     3 ,     0 ,
        0 ,     3 ,     0 ,     3 ,     0 ,     3 ,    
    0 ,     0 ,     3 ,     3 ,     3 ,     3 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     3 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0      };

lSize[2] = lSize[0]*lSize[1]/2 + 1;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 2:

// 2: Green Walls
//start={10,2};
start[0]=9;
start[1]=1;
lSize[0]=19;
lSize[1]=12;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     4 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     4 ,     0 ,     3 ,     0 ,     0 ,
    0 ,     4 ,     4 ,     3 ,     0 ,     0 ,    
        0 ,     4 ,     3 ,     3 ,     0 ,     0 ,
    0 ,     4 ,     3 ,     3 ,     3 ,     0 ,    
        0 ,     1 ,     3 ,     3 ,     3 ,     0 ,
    0 ,     3 ,     4 ,     4 ,     4 ,     3 ,    
        3 ,     4 ,     4 ,     1 ,     4 ,     0 ,
    0 ,     3 ,     4 ,     4 ,     4 ,     3 ,    
        0 ,     1 ,     3 ,     3 ,     3 ,     0 ,
    0 ,     4 ,     3 ,     3 ,     3 ,     0 ,    
        0 ,     4 ,     3 ,     3 ,     0 ,     0 ,
    0 ,     4 ,     4 ,     3 ,     0 ,     0 ,    
        0 ,     4 ,     0 ,     3 ,     0 ,     0 ,
    0 ,     4 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 3:

// 3: Trampolines
//start={3,8};
start[0]=2;
start[1]=7;
lSize[0]=22;
lSize[1]=13;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        2 ,     0 ,     0 ,     1 ,     1 ,     1 ,    
    0 ,     8 ,     3 ,     0 ,     1 ,     1 ,     0 ,
        1 ,     3 ,     0 ,     0 ,     8 ,     0 ,    
    0 ,     8 ,     8 ,     0 ,     1 ,     1 ,     0 ,
        1 ,     0 ,     0 ,     2 ,     0 ,     2 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     8 ,     0 ,     0 ,     3 ,     0 ,    
    0 ,     3 ,     0 ,     0 ,     0 ,     1 ,     0 ,
        0 ,     0 ,     8 ,     0 ,     3 ,     3 ,    
    0 ,     8 ,     8 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     3 ,     3 ,    
    0 ,     0 ,     0 ,     8 ,     0 ,     3 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     3 ,     3 ,    
    0 ,     8 ,     0 ,     0 ,     8 ,     0 ,     0 ,
        0 ,     0 ,     8 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     1 ,     1 ,     8 ,     0 ,
        8 ,     8 ,     0 ,     1 ,     1 ,     1 ,    
    0 ,     3 ,     0 ,     0 ,     0 ,     1 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0      };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 4:

// 4: Orbital
//start={10,3};
start[0]=9;
start[1]=2;
lSize[0]=20;
lSize[1]=15;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     3 ,     3 ,     0 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     3 ,     3 ,     0 ,     1 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     1 ,     3 ,     3 ,     3 ,     0 ,     3 ,     0 ,
        3 ,     0 ,     1 ,     0 ,     3 ,     3 ,     3 ,    
    0 ,     3 ,     3 ,     3 ,     3 ,     3 ,     1 ,     0 ,
        3 ,     3 ,     3 ,     0 ,     3 ,     3 ,     3 ,    
    0 ,     3 ,     0 ,     0 ,     3 ,     0 ,     3 ,     0 ,
        3 ,     3 ,     0 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     3 ,     0 ,     0 ,     1 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0    };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 5:

// 5: Weathervane
//start={11,4};
start[0]=10;
start[1]=3;
lSize[0]=21;
lSize[1]=15;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     1 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     8 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     1 ,     0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     1 ,     3 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     1 ,     1 ,     3 ,     3 ,     3 ,     0 ,     0 ,
        1 ,     1 ,     3 ,     8 ,     0 ,     0 ,     0 ,    
    0 ,     1 ,     1 ,     3 ,     3 ,     3 ,     0 ,     0 ,
        0 ,     1 ,     3 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     1 ,     0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     8 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     1 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0      };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 6:

// 6: Explorer
//start={15,6};
start[0]=14;
start[1]=5;
lSize[0]=22;
lSize[1]=15;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     3 ,     0 ,     0 ,     0 ,
        3 ,     3 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     3 ,     0 ,     3 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     8 ,     3 ,     3 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     3 ,     0 ,     3 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     0 ,     3 ,     3 ,     0 ,
        1 ,     8 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     1 ,     8 ,     0 ,     3 ,     3 ,     3 ,     0 ,
        0 ,     1 ,     0 ,     0 ,     8 ,     3 ,     0 ,    
    0 ,     0 ,     1 ,     0 ,     0 ,     3 ,     3 ,     0 ,
        0 ,     0 ,     1 ,     8 ,     0 ,     3 ,     3 ,    
    0 ,     0 ,     0 ,     1 ,     8 ,     8 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     1 ,     0 ,     3 ,     3 ,    
    0 ,     0 ,     0 ,     0 ,     1 ,     0 ,     3 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     1 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     1 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0    };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 7:

// 7: Hive
//start={8,2};
start[0]=7;
start[1]=1;
lSize[0]=17;
lSize[1]=10;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     0 ,     0 ,    
        0 ,     3 ,     3 ,     0 ,     0 ,
    0 ,     3 ,     3 ,     3 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     3 ,     3 ,     3 ,     0 ,    
        3 ,     3 ,     3 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     1 ,    
        3 ,     3 ,     3 ,     3 ,     0 ,
    0 ,     3 ,     3 ,     3 ,     0 ,     
        0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     3 ,     3 ,     3 ,     0 ,    
        0 ,     3 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0        };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 8:

// 8: Triangular
//start={12,2};
start[0]=11;
start[1]=1;
lSize[0]=23;
lSize[1]=13;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     1 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     1 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     1 ,     3 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     3 ,     0 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     3 ,     1 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     3 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     0 ,     3 ,     0 ,
        1 ,     3 ,     3 ,     3 ,     0 ,     3 ,    
    0 ,     3 ,     3 ,     3 ,     0 ,     3 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     3 ,     0 ,    
    0 ,     3 ,     1 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     3 ,     0 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     1 ,     3 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     1 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     1 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0      };

lSize[2] = lSize[0]*lSize[1]/2 + 1;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 9:

// 9: Toughened Tiles
//start={12,2};
start[0]=11;
start[1]=1;
lSize[0]=21;
lSize[1]=15;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     6 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     1 ,     1 ,     3 ,     0 ,    
    0 ,     0 ,     0 ,     1 ,     0 ,     6 ,     0 ,     0 ,
        0 ,     0 ,     1 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     1 ,     0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     1 ,     0 ,     0 ,     0 ,     3 ,     0 ,    
    0 ,     1 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
        6 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     5 ,     0 ,     0 ,     3 ,     3 ,     0 ,
        1 ,     5 ,     5 ,     0 ,     3 ,     6 ,     3 ,    
    0 ,     5 ,     0 ,     0 ,     3 ,     3 ,     3 ,     0 ,
        6 ,     0 ,     5 ,     3 ,     3 ,     0 ,     3 ,    
    0 ,     3 ,     0 ,     6 ,     3 ,     3 ,     0 ,     0 ,
        0 ,     3 ,     3 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     0 ,     3 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0     };

lSize[2] = lSize[0]*lSize[1]/2 + 1;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 10:

// 10: Archipelago
//start={6,3};
start[0]=5;
start[1]=2;
lSize[0]=21;
lSize[1]=15;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     8 ,     0 ,    
    0 ,     1 ,     0 ,     3 ,     0 ,     1 ,     1 ,     0 ,
        1 ,     1 ,     8 ,     3 ,     0 ,     1 ,     0 ,    
    0 ,     1 ,     0 ,     3 ,     0 ,     8 ,     8 ,     0 ,
        1 ,     1 ,     3 ,     3 ,     0 ,     1 ,     0 ,    
    0 ,     8 ,     0 ,     3 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     8 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     0 ,     3 ,     3 ,     3 ,     0 ,
        0 ,     3 ,     3 ,     0 ,     3 ,     8 ,     3 ,    
    0 ,     0 ,     3 ,     0 ,     3 ,     8 ,     3 ,     0 ,
        0 ,     3 ,     8 ,     0 ,     3 ,     3 ,     3 ,    
    0 ,     0 ,     8 ,     0 ,     0 ,     0 ,     3 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     8 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0      };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 11:

// 11: Island
//start={12,2};
start[0]=11;
start[1]=1;
lSize[0]=21;
lSize[1]=12;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     5 ,     0 ,     0 ,    
        0 ,     0 ,     5 ,     5 ,     0 ,     0 ,
    0 ,     0 ,     5 ,     0 ,     5 ,     0 ,    
        0 ,     5 ,     0 ,     0 ,     5 ,     0 ,
    0 ,     5 ,     0 ,     0 ,     0 ,     5 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     5 ,     0 ,     6 ,     0 ,     5 ,    
        5 ,     0 ,     6 ,     6 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     3 ,     0 ,     5 ,    
        5 ,     0 ,     6 ,     6 ,     0 ,     0 ,
    0 ,     5 ,     5 ,     6 ,     0 ,     5 ,    
        5 ,     5 ,     0 ,     0 ,     5 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     5 ,     0 ,    
        5 ,     0 ,     0 ,     5 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     5 ,     0 ,     0 ,    
        5 ,     5 ,     5 ,     0 ,     0 ,     0 ,
    0 ,     5 ,     5 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 12:

// 12: Stripes
//start={14,2};
start[0]=13;
start[1]=1;
lSize[0]=20;
lSize[1]=11;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     0 ,     0 ,
        5 ,     5 ,     5 ,     0 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     0 ,     0 ,
        5 ,     5 ,     5 ,     0 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     0 ,     0 ,
        5 ,     5 ,     5 ,     0 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     0 ,     0 ,
        5 ,     5 ,     5 ,     0 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     0 ,     0 ,
        5 ,     5 ,     5 ,     0 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     0 ,     0 ,
        5 ,     5 ,     5 ,     4 ,     0 ,    
    0 ,     0 ,     0 ,     4 ,     4 ,     0 ,
        0 ,     0 ,     4 ,     6 ,     4 ,    
    0 ,     0 ,     0 ,     4 ,     4 ,     0 ,
        0 ,     0 ,     0 ,     4 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 13:

// 13: One Two One Two
//start={10,9};
start[0]=9;
start[1]=8;
lSize[0]=22;
lSize[1]=14;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     4 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     4 ,     4 ,     4 ,     0 ,     0 ,    
        0 ,     4 ,     5 ,     4 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     5 ,     4 ,     0 ,     0 ,     0 ,    
        0 ,     4 ,     4 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     4 ,     0 ,     8 ,     5 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     5 ,     3 ,     5 ,    
        0 ,     0 ,     0 ,     3 ,     3 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     3 ,     0 ,     2 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     3 ,     3 ,     0 ,
    0 ,     5 ,     0 ,     1 ,     1 ,     3 ,     5 ,    
        3 ,     5 ,     0 ,     2 ,     0 ,     0 ,     0 ,
    0 ,     2 ,     5 ,     1 ,     1 ,     0 ,     0 ,    
        5 ,     2 ,     5 ,     1 ,     5 ,     0 ,     0 ,
    0 ,     5 ,     2 ,     0 ,     0 ,     5 ,     0 ,    
        0 ,     5 ,     5 ,     3 ,     3 ,     5 ,     0 ,
    0 ,     0 ,     5 ,     0 ,     5 ,     0 ,     2 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0        };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 14:

// 14: Deathtrap
//start={13,3};
start[0]=12;
start[1]=2;
lSize[0]=20;
lSize[1]=15;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     7 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     7 ,     7 ,     7 ,     0 ,     0 ,     3 ,    
    0 ,     0 ,     7 ,     7 ,     7 ,     7 ,     7 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     7 ,     7 ,     0 ,    
    0 ,     0 ,     7 ,     7 ,     7 ,     3 ,     3 ,     0 ,
        0 ,     3 ,     3 ,     7 ,     7 ,     7 ,     7 ,    
    0 ,     0 ,     7 ,     7 ,     3 ,     7 ,     3 ,     0 ,
        0 ,     7 ,     7 ,     0 ,     3 ,     7 ,     7 ,    
    0 ,     3 ,     7 ,     7 ,     7 ,     0 ,     7 ,     0 ,
        3 ,     7 ,     0 ,     7 ,     7 ,     7 ,     7 ,    
    0 ,     3 ,     0 ,     3 ,     0 ,     5 ,     0 ,     0 ,
        3 ,     7 ,     0 ,     7 ,     7 ,     7 ,     7 ,    
    0 ,     3 ,     7 ,     7 ,     7 ,     7 ,     7 ,     0 ,
        0 ,     0 ,     4 ,     4 ,     6 ,     6 ,     3 ,    
    0 ,     0 ,     7 ,     7 ,     7 ,     7 ,     7 ,     0 ,
        0 ,     0 ,     7 ,     7 ,     7 ,     7 ,     3 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 15:

// 15: Bridges
//start={10,2};
start[0]=9;
start[1]=1;
lSize[0]=21;
lSize[1]=14;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
        0 ,     1 ,     8 ,     3 ,     0 ,     0 ,     0 ,
    0 ,     1 ,     8 ,     0 ,     3 ,     0 ,     0 ,    
        1 ,     8 ,     8 ,     0 ,     3 ,     0 ,     0 ,
    0 ,     8 ,     8 ,     3 ,     0 ,     3 ,     0 ,    
        1 ,     8 ,     8 ,     3 ,     0 ,     0 ,     0 ,
    0 ,     8 ,     8 ,     0 ,     3 ,     3 ,     0 ,    
        1 ,     8 ,     3 ,     0 ,     1 ,     0 ,     0 ,
    0 ,     8 ,     8 ,     3 ,     1 ,     1 ,     0 ,    
        0 ,     8 ,     0 ,     3 ,     8 ,     1 ,     0 ,
    0 ,     3 ,     3 ,     0 ,     1 ,     8 ,     1 ,    
        0 ,     0 ,     3 ,     8 ,     8 ,     1 ,     0 ,
    0 ,     3 ,     0 ,     3 ,     8 ,     8 ,     1 ,    
        0 ,     3 ,     0 ,     8 ,     8 ,     1 ,     0 ,
    0 ,     0 ,     3 ,     0 ,     8 ,     1 ,     0 ,    
        0 ,     0 ,     3 ,     3 ,     1 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0         };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 16:

// 16: Not a Knot
//start={10,2};
start[0]=9;
start[1]=1;
lSize[0]=22;
lSize[1]=15;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     4 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     4 ,     4 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     4 ,     0 ,     4 ,     0 ,     0 ,
        0 ,     3 ,     0 ,     0 ,     0 ,     4 ,     0 ,    
    0 ,     3 ,     3 ,     4 ,     3 ,     0 ,     4 ,     0 ,
        4 ,     3 ,     3 ,     3 ,     3 ,     4 ,     4 ,    
    0 ,     3 ,     3 ,     1 ,     3 ,     1 ,     0 ,     0 ,
        1 ,     0 ,     3 ,     3 ,     3 ,     4 ,     4 ,    
    0 ,     0 ,     3 ,     4 ,     3 ,     0 ,     4 ,     0 ,
        1 ,     3 ,     0 ,     0 ,     0 ,     4 ,     0 ,    
    0 ,     3 ,     3 ,     4 ,     0 ,     4 ,     0 ,     0 ,
        4 ,     3 ,     0 ,     4 ,     4 ,     0 ,     0 ,    
    0 ,     3 ,     0 ,     4 ,     4 ,     0 ,     0 ,     0 ,
        4 ,     0 ,     4 ,     4 ,     0 ,     0 ,     0 ,    
    0 ,     4 ,     4 ,     4 ,     4 ,     0 ,     0 ,     0 ,
        0 ,     4 ,     0 ,     4 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     4 ,     4 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     4 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0      };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 17:

// 17: Winding Order
//start={12,4};
start[0]=11;
start[1]=3;
lSize[0]=22;
lSize[1]=15;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     4 ,     3 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        4 ,     0 ,     3 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     4 ,     3 ,     3 ,     3 ,     0 ,     0 ,     0 ,
        4 ,     0 ,     3 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     4 ,     3 ,     0 ,     3 ,     3 ,     0 ,     0 ,
        4 ,     8 ,     3 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     4 ,     3 ,     3 ,     3 ,     3 ,     0 ,     0 ,
        4 ,     0 ,     3 ,     3 ,     0 ,     3 ,     0 ,    
    0 ,     4 ,     3 ,     3 ,     0 ,     0 ,     3 ,     0 ,
        4 ,     1 ,     0 ,     3 ,     0 ,     0 ,     3 ,    
    0 ,     4 ,     3 ,     0 ,     0 ,     0 ,     3 ,     0 ,
        4 ,     0 ,     0 ,     0 ,     0 ,     3 ,     3 ,    
    0 ,     4 ,     3 ,     0 ,     0 ,     3 ,     0 ,     0 ,
        4 ,     3 ,     3 ,     0 ,     3 ,     3 ,     3 ,    
    0 ,     4 ,     0 ,     3 ,     3 ,     0 ,     3 ,     0 ,
        4 ,     3 ,     3 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     4 ,     3 ,     3 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 18:

// 18: Laser Tiles
//start={14,2};
start[0]=13;
start[1]=1;
lSize[0]=19;
lSize[1]=15;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     2 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     2 ,     4 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     7 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     2 ,    
    0 ,     2 ,     0 ,     0 ,     3 ,     0 ,     4 ,     0 ,
        0 ,     0 ,     1 ,     1 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     1 ,     1 ,     7 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     4 ,     3 ,     0 ,     0 ,    
    0 ,     3 ,     1 ,     7 ,     1 ,     0 ,     0 ,     0 ,
        3 ,     3 ,     0 ,     7 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        1 ,     3 ,     3 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     3 ,     3 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        3 ,     3 ,     0 ,     0 ,     0 ,     4 ,     0 ,    
    0 ,     3 ,     0 ,     4 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0    };

lSize[2] = lSize[0]*lSize[1]/2 + 1;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 19:

// 19: Sniper
//extra padding is needing on the left
//Emi can jump off the left side of the screen!
//start={17,13};
start[0]=16;
start[1]=12;
lSize[0]=19;
lSize[1]=16;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     3 ,     3 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     8 ,     0 ,
    0 ,     0 ,     0 ,     1 ,     0 ,     3 ,     0 ,     3 ,    
        0 ,     0 ,     8 ,     0 ,     3 ,     8 ,     0 ,     0 ,
    0 ,     1 ,     1 ,     0 ,     8 ,     3 ,     3 ,     1 ,    
        0 ,     4 ,     1 ,     3 ,     3 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     1 ,    
        0 ,     3 ,     1 ,     0 ,     3 ,     0 ,     7 ,     0 ,
    0 ,     8 ,     0 ,     0 ,     3 ,     0 ,     7 ,     1 ,    
        0 ,     3 ,     1 ,     0 ,     0 ,     7 ,     1 ,     0 ,
    0 ,     1 ,     1 ,     0 ,     0 ,     7 ,     1 ,     1 ,    
        0 ,     0 ,     1 ,     0 ,     7 ,     1 ,     1 ,     0 ,
    0 ,     0 ,     0 ,     1 ,     7 ,     1 ,     1 ,     1 ,    
        0 ,     0 ,     0 ,     1 ,     1 ,     1 ,     1 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     1 ,     1 ,     1 ,     1 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 20:

// 20: Snowflake
//start={13,2};
start[0]=12;
start[1]=1;
lSize[0]=23;
lSize[1]=13;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     1 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     1 ,     3 ,     1 ,     0 ,     0 ,
        0 ,     1 ,     0 ,     1 ,     1 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     1 ,     0 ,
        0 ,     1 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     1 ,     0 ,     7 ,     3 ,     1 ,     0 ,
        1 ,     0 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     7 ,     3 ,     7 ,     1 ,     0 ,
        1 ,     3 ,     3 ,     3 ,     0 ,     1 ,    
    0 ,     1 ,     3 ,     7 ,     3 ,     0 ,     0 ,
        1 ,     0 ,     3 ,     3 ,     3 ,     1 ,    
    0 ,     1 ,     7 ,     3 ,     7 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     3 ,     0 ,     1 ,    
    0 ,     1 ,     3 ,     7 ,     0 ,     1 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     1 ,     0 ,    
    0 ,     1 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     1 ,     1 ,     0 ,     1 ,     0 ,    
    0 ,     0 ,     1 ,     1 ,     1 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     1 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0      };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 21:

// 21: Trigger Happy
//start={17,13};
start[0]=16;
start[1]=12;
lSize[0]=21;
lSize[1]=15;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     6 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     6 ,     4 ,     1 ,     0 ,     0 ,    
    0 ,     0 ,     6 ,     7 ,     1 ,     7 ,     0 ,     0 ,
        0 ,     6 ,     4 ,     0 ,     1 ,     1 ,     0 ,    
    0 ,     4 ,     7 ,     0 ,     1 ,     7 ,     1 ,     0 ,
        1 ,     4 ,     0 ,     1 ,     0 ,     7 ,     0 ,    
    0 ,     0 ,     0 ,     1 ,     3 ,     7 ,     4 ,     0 ,
        1 ,     0 ,     1 ,     0 ,     0 ,     1 ,     4 ,    
    0 ,     0 ,     1 ,     3 ,     3 ,     1 ,     7 ,     0 ,
        1 ,     1 ,     0 ,     3 ,     0 ,     7 ,     4 ,    
    0 ,     1 ,     3 ,     0 ,     0 ,     7 ,     0 ,     0 ,
        5 ,     0 ,     3 ,     3 ,     0 ,     1 ,     0 ,    
    0 ,     4 ,     0 ,     3 ,     7 ,     1 ,     7 ,     0 ,
        4 ,     4 ,     3 ,     3 ,     0 ,     7 ,     0 ,    
    0 ,     4 ,     0 ,     0 ,     7 ,     7 ,     1 ,     0 ,
        4 ,     4 ,     3 ,     3 ,     0 ,     1 ,     0 ,    
    0 ,     4 ,     0 ,     3 ,     0 ,     7 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0    };

lSize[2] = lSize[0]*lSize[1]/2 + 1;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 22:

// 22: Deadly Snowflake
//start={9,2};
start[0]=8;
start[1]=1;
lSize[0]=19;
lSize[1]=10;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,    
        1 ,     0 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     3 ,     3 ,     0 ,    
        1 ,     3 ,     7 ,     3 ,     0 ,
    0 ,     3 ,     0 ,     0 ,     3 ,    
        1 ,     7 ,     7 ,     7 ,     0 ,
    0 ,     3 ,     7 ,     7 ,     3 ,    
        1 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     3 ,     7 ,     7 ,     3 ,    
        1 ,     7 ,     7 ,     7 ,     0 ,
    0 ,     3 ,     0 ,     0 ,     3 ,    
        1 ,     8 ,     7 ,     8 ,     0 ,
    0 ,     3 ,     3 ,     3 ,     3 ,    
        0 ,     3 ,     3 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0   };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 23:

// 23: A Mountain
//start={16,4};
start[0]=15;
start[1]=3;
lSize[0]=23;
lSize[1]=13;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     4 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     4 ,     4 ,     0 ,     0 ,     0 ,    
    0 ,     4 ,     4 ,     4 ,     0 ,     0 ,     0 ,
        4 ,     4 ,     4 ,     4 ,     0 ,     0 ,    
    0 ,     4 ,     3 ,     4 ,     4 ,     0 ,     0 ,
        4 ,     3 ,     3 ,     4 ,     4 ,     0 ,    
    0 ,     4 ,     1 ,     3 ,     4 ,     4 ,     0 ,
        4 ,     3 ,     8 ,     3 ,     4 ,     0 ,    
    0 ,     4 ,     4 ,     4 ,     3 ,     4 ,     0 ,
        4 ,     3 ,     4 ,     1 ,     4 ,     1 ,    
    0 ,     4 ,     8 ,     8 ,     3 ,     4 ,     0 ,
        4 ,     3 ,     4 ,     3 ,     4 ,     0 ,    
    0 ,     4 ,     1 ,     3 ,     4 ,     4 ,     0 ,
        4 ,     3 ,     3 ,     4 ,     4 ,     0 ,    
    0 ,     4 ,     3 ,     4 ,     4 ,     0 ,     0 ,
        4 ,     4 ,     4 ,     4 ,     0 ,     0 ,    
    0 ,     4 ,     4 ,     4 ,     0 ,     0 ,     0 ,
        0 ,     4 ,     4 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     4 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0    };

lSize[2] = lSize[0]*lSize[1]/2 + 1;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 24:

// 24: More Stripes
//start={4,2};
start[0]=3;
start[1]=1;
lSize[0]=20;
lSize[1]=15;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     8 ,     8 ,     8 ,     5 ,     3 ,     0 ,     0 ,
        5 ,     3 ,     3 ,     3 ,     8 ,     3 ,     0 ,    
    0 ,     8 ,     8 ,     8 ,     5 ,     3 ,     0 ,     0 ,
        5 ,     3 ,     3 ,     3 ,     8 ,     3 ,     0 ,    
    0 ,     8 ,     8 ,     8 ,     5 ,     3 ,     0 ,     0 ,
        5 ,     3 ,     3 ,     3 ,     8 ,     3 ,     0 ,    
    0 ,     8 ,     8 ,     8 ,     5 ,     3 ,     0 ,     0 ,
        5 ,     3 ,     3 ,     3 ,     8 ,     3 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     8 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     8 ,     8 ,     8 ,     0 ,     0 ,     1 ,    
    0 ,     5 ,     5 ,     5 ,     5 ,     1 ,     1 ,     0 ,
        0 ,     3 ,     3 ,     3 ,     1 ,     1 ,     1 ,    
    0 ,     5 ,     5 ,     5 ,     5 ,     1 ,     1 ,     0 ,
        0 ,     5 ,     5 ,     5 ,     0 ,     0 ,     1 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 25:

// 25: Gun Platform
//start={12,2};
start[0]=11;
start[1]=1;
lSize[0]=22;
lSize[1]=14;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     5 ,     5 ,     5 ,     0 ,     0 ,    
        0 ,     5 ,     5 ,     5 ,     5 ,     0 ,     0 ,
    0 ,     5 ,     0 ,     5 ,     0 ,     5 ,     0 ,    
        5 ,     0 ,     0 ,     0 ,     0 ,     5 ,     0 ,
    0 ,     0 ,     3 ,     8 ,     3 ,     0 ,     5 ,    
        5 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     7 ,     0 ,     3 ,     5 ,    
        5 ,     3 ,     7 ,     7 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     5 ,    
        5 ,     0 ,     7 ,     7 ,     0 ,     0 ,     0 ,
    0 ,     5 ,     5 ,     7 ,     0 ,     3 ,     5 ,    
        5 ,     5 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     3 ,     3 ,    
        5 ,     0 ,     3 ,     3 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     5 ,    
        5 ,     5 ,     0 ,     0 ,     0 ,     5 ,     0 ,
    0 ,     5 ,     5 ,     5 ,     5 ,     5 ,     0 ,    
        0 ,     0 ,     5 ,     3 ,     5 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0   };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 26:

// 26: Nucleus
//start={11,6};
start[0]=10;
start[1]=5;
lSize[0]=21;
lSize[1]=11;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     5 ,     0 ,     0 ,
        0 ,     3 ,     3 ,     3 ,     0 ,    
    0 ,     3 ,     0 ,     0 ,     3 ,     0 ,
        3 ,     0 ,     7 ,     0 ,     3 ,    
    0 ,     3 ,     7 ,     7 ,     3 ,     0 ,
        3 ,     7 ,     8 ,     7 ,     5 ,    
    0 ,     0 ,     4 ,     3 ,     0 ,     0 ,
        5 ,     7 ,     7 ,     7 ,     5 ,    
    0 ,     0 ,     4 ,     4 ,     0 ,     0 ,
        5 ,     7 ,     3 ,     7 ,     3 ,    
    0 ,     3 ,     7 ,     7 ,     3 ,     0 ,
        3 ,     0 ,     7 ,     0 ,     3 ,    
    0 ,     3 ,     0 ,     0 ,     3 ,     0 ,
        0 ,     3 ,     3 ,     3 ,     0 ,    
    0 ,     0 ,     3 ,     5 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 27:

// 27: Eagerness
//start={9,4};
start[0]=8;
start[1]=3;
lSize[0]=22;
lSize[1]=14;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     1 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     5 ,     1 ,     0 ,     0 ,     0 ,    
        0 ,     1 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     1 ,     0 ,     0 ,     0 ,    
        0 ,     1 ,     1 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     7 ,     0 ,    
        0 ,     1 ,     0 ,     0 ,     7 ,     0 ,     0 ,
    0 ,     1 ,     1 ,     0 ,     4 ,     1 ,     0 ,    
        1 ,     0 ,     3 ,     8 ,     1 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     7 ,     8 ,     1 ,     0 ,    
        5 ,     1 ,     0 ,     1 ,     6 ,     6 ,     0 ,
    0 ,     0 ,     0 ,     8 ,     0 ,     0 ,     0 ,    
        1 ,     1 ,     0 ,     8 ,     1 ,     6 ,     0 ,
    0 ,     1 ,     0 ,     4 ,     6 ,     1 ,     0 ,    
        0 ,     0 ,     0 ,     1 ,     0 ,     4 ,     0 ,
    0 ,     0 ,     0 ,     7 ,     1 ,     6 ,     7 ,    
        0 ,     0 ,     0 ,     1 ,     6 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     7 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 28:

// 28: Wand
//start={10,5};
start[0]=9;
start[1]=4;
lSize[0]=16;
lSize[1]=13;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     5 ,     0 ,     0 ,     6 ,    
    0 ,     0 ,     5 ,     5 ,     0 ,     8 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     3 ,     0 ,    
    0 ,     0 ,     5 ,     3 ,     8 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     5 ,     0 ,     0 ,    
    0 ,     0 ,     5 ,     8 ,     3 ,     0 ,     0 ,
        0 ,     6 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     1 ,     8 ,     0 ,     5 ,     0 ,     0 ,
        1 ,     3 ,     5 ,     0 ,     0 ,     0 ,    
    0 ,     4 ,     6 ,     5 ,     5 ,     0 ,     0 ,
        1 ,     1 ,     0 ,     5 ,     0 ,     0 ,    
    0 ,     1 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0   };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 29:

// 29: There and Back
//start={11,2};
start[0]=10;
start[1]=1;
lSize[0]=22;
lSize[1]=11;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     1 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,    
    0 ,     0 ,     3 ,     1 ,     3 ,     0 ,
        0 ,     1 ,     3 ,     0 ,     3 ,    
    0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     3 ,     0 ,     3 ,     1 ,    
    0 ,     0 ,     3 ,     1 ,     3 ,     0 ,
        1 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     3 ,     1 ,     3 ,     1 ,     0 ,
        0 ,     3 ,     0 ,     3 ,     0 ,    
    0 ,     0 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     1 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     1 ,     1 ,     0 ,    
    0 ,     0 ,     0 ,     1 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0   };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 30:

// 30: Turtle
//start={17,10};
start[0]=16;
start[1]=9;
lSize[0]=21;
lSize[1]=11;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     5 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     3 ,     0 ,     0 ,
        3 ,     3 ,     8 ,     3 ,     3 ,    
    0 ,     3 ,     3 ,     3 ,     3 ,     0 ,
        0 ,     8 ,     3 ,     8 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     3 ,     0 ,
        0 ,     3 ,     8 ,     3 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     3 ,     0 ,
        0 ,     8 ,     3 ,     8 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     5 ,     0 ,
        3 ,     3 ,     8 ,     3 ,     5 ,    
    0 ,     0 ,     3 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 31:

// 31: Fetch Quest
//start={16,7};
start[0]=15;
start[1]=6;
lSize[0]=26;
lSize[1]=13;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     3 ,     0 ,    
    0 ,     0 ,     0 ,     5 ,     10,     3 ,     0 ,
        0 ,     0 ,     110,    0 ,     0 ,     9 ,    
    0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     3 ,     3 ,     9 ,    
    0 ,     0 ,     0 ,     0 ,     3 ,     9 ,     0 ,
        0 ,     3 ,     3 ,     3 ,     9 ,     0 ,    
    0 ,     3 ,     3 ,     0 ,     9 ,     110,    0 ,
        0 ,     3 ,     103,    3 ,     3 ,     0 ,    
    0 ,     3 ,     0 ,     3 ,     3 ,     0 ,     0 ,
        105,    3 ,     3 ,     3 ,     0 ,     9 ,    
    0 ,     3 ,     3 ,     3 ,     107,    0 ,     0 ,
        3 ,     3 ,     3 ,     3 ,     0 ,     9 ,    
    0 ,     0 ,     107,    3 ,     0 ,     0 ,     0 ,
        3 ,     0 ,     3 ,     3 ,     0 ,     9 ,    
    0 ,     0 ,     3 ,     3 ,     110,    3 ,     0 ,
        3 ,     3 ,     0 ,     3 ,     3 ,     0 ,    
    0 ,     10,     3 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     3 ,     3 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     105,    0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0   };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 32:

// 32: A Strange Place
//start={11,3};
start[0]=10;
start[1]=2;
lSize[0]=19;
lSize[1]=14;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     3 ,     0 ,     0 ,     0 ,     3 ,     6 ,    
        5 ,     0 ,     0 ,     0 ,     0 ,     3 ,     0 ,
    0 ,     3 ,     0 ,     0 ,     0 ,     6 ,     0 ,    
        3 ,     6 ,     0 ,     0 ,     6 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        1 ,     3 ,     0 ,     3 ,     0 ,     0 ,     0 ,
    0 ,     1 ,     0 ,     10,     0 ,     0 ,     0 ,    
        0 ,     1 ,     11,     0 ,     0 ,     0 ,     0 ,
    0 ,     1 ,     1 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     3 ,     0 ,     1 ,     0 ,     0 ,     0 ,    
        0 ,     3 ,     0 ,     1 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     1 ,     12,     0 ,    
        0 ,     0 ,     0 ,     0 ,     1 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     1 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 33:

// 33: Rolling Hexagons
// this level needs extra padding on 3 sides
//
// 13136642642646331535263315336633151442644131534 makes Emi jump off
// screen!
//start={21,4};
start[0]=20;
start[1]=3;
lSize[0]=29;
lSize[1]=12;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     3 ,     3 ,     0 ,    
        0 ,     0 ,     3 ,     0 ,     3 ,     0 ,
    0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     12,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     3 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     5 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     5 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     5 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     5 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     10,     3 ,     0 ,     0 ,    
        0 ,     10,     5 ,     3 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     3 ,     3 ,     0 ,    
        0 ,     3 ,     0 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     3 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0    };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 34:

// 34: Transport Hub
//start={13,7};
start[0]=12;
start[1]=6;
lSize[0]=24;
lSize[1]=13;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     5 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     0 ,     6 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     5 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     5 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        3 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     3 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        3 ,     0 ,     0 ,     0 ,     3 ,     0 ,    
    0 ,     3 ,     0 ,     0 ,     3 ,     3 ,     0 ,
        3 ,     0 ,     12,     12,     0 ,     0 ,    
    0 ,     0 ,     0 ,     1 ,     0 ,     3 ,     0 ,
        3 ,     0 ,     12,     12,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     3 ,     0 ,
        3 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     3 ,     0 ,     0 ,     0 ,     3 ,     0 ,
        3 ,     12,     0 ,     0 ,     0 ,     3 ,    
    0 ,     3 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        3 ,     3 ,     0 ,     0 ,     0 ,     3 ,    
    0 ,     3 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 35:

// 35: Spinner TIles
//start={5,3};
start[0]=4;
start[1]=2;
lSize[0]=20;
lSize[1]=14;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     1 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        1 ,     1 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     1 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
    0 ,     1 ,     0 ,     0 ,     3 ,     3 ,     0 ,    
        3 ,     3 ,     0 ,     3 ,     10,     0 ,     0 ,
    0 ,     3 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     1 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     10,     0 ,     0 ,     0 ,     3 ,     3 ,    
        0 ,     0 ,     0 ,     10,     0 ,     10,     0 ,
    0 ,     0 ,     1 ,     0 ,     0 ,     3 ,     3 ,    
        0 ,     0 ,     10,     0 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     1 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     1 ,     1 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     1 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0     };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 36:

// 36: Icy Tiles
//start={13,4};
start[0]=12;
start[1]=3;
lSize[0]=20;
lSize[1]=12;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     3 ,     0 ,     0 ,     0 ,
    0 ,     3 ,     3 ,     3 ,     0 ,     0 ,    
        3 ,     8 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     3 ,     3 ,     3 ,     0 ,    
        3 ,     0 ,     9 ,     9 ,     3 ,     0 ,
    0 ,     0 ,     3 ,     9 ,     0 ,     0 ,    
        3 ,     0 ,     9 ,     9 ,     3 ,     0 ,
    0 ,     0 ,     3 ,     9 ,     8 ,     0 ,    
        3 ,     3 ,     0 ,     9 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     3 ,     3 ,     3 ,    
        3 ,     1 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     3 ,     3 ,     3 ,     0 ,     3 ,    
        0 ,     3 ,     3 ,     0 ,     3 ,     0 ,
    0 ,     0 ,     3 ,     0 ,     3 ,     0 ,    
        0 ,     0 ,     3 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     3 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0         };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 37:

// 37: Small Cog
//start={7,2};
start[0]=6;
start[1]=1;
lSize[0]=14;
lSize[1]=6;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,    
        0 ,     4 ,     0 ,
    0 ,     4 ,     4 ,    
        4 ,     0 ,     0 ,
    0 ,     4 ,     4 ,    
        3 ,     3 ,     0 ,
    0 ,     10,     4 ,    
        3 ,     3 ,     0 ,
    0 ,     3 ,     4 ,    
        0 ,     1 ,     0 ,
    0 ,     0 ,     4 ,    
        0 ,     0 ,     0 ,
    0 ,     0 ,     0         };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 38:

// 38: All About Preparation
//start={13,3};
start[0]=12;
start[1]=2;
lSize[0]=24;
lSize[1]=14;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     1 ,     1 ,     1 ,     0 ,    
        0 ,     1 ,     3 ,     1 ,     3 ,     1 ,     0 ,
    0 ,     1 ,     1 ,     0 ,     1 ,     1 ,     1 ,    
        3 ,     0 ,     3 ,     4 ,     3 ,     1 ,     0 ,
    0 ,     3 ,     0 ,     1 ,     4 ,     0 ,     1 ,    
        1 ,     3 ,     0 ,     10,     0 ,     10,     0 ,
    0 ,     0 ,     8 ,     0 ,     0 ,     0 ,     4 ,    
        1 ,     4 ,     0 ,     4 ,     4 ,     4 ,     0 ,
    0 ,     0 ,     0 ,     4 ,     0 ,     4 ,     0 ,    
        1 ,     0 ,     8 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     1 ,     0 ,     4 ,     0 ,     4 ,     0 ,    
        0 ,     1 ,     0 ,     0 ,     4 ,     0 ,     0 ,
    0 ,     0 ,     3 ,     0 ,     4 ,     4 ,     0 ,    
        0 ,     1 ,     1 ,     10,     0 ,     10,     0 ,
    0 ,     0 ,     3 ,     1 ,     4 ,     4 ,     1 ,    
        0 ,     0 ,     1 ,     0 ,     0 ,     1 ,     0 ,
    0 ,     0 ,     0 ,     1 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     1 ,     3 ,     1 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     1 ,     1 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0     };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 39:

// 39: Slippery Situation
//start={10,2};
start[0]=9;
start[1]=1;
lSize[0]=18;
lSize[1]=15;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     9 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     9 ,     9 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     9 ,     9 ,     9 ,     0 ,     0 ,
        0 ,     3 ,     3 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     5 ,     9 ,     0 ,     9 ,     9 ,     5 ,     0 ,
        3 ,     5 ,     3 ,     9 ,     3 ,     3 ,     5 ,    
    0 ,     5 ,     3 ,     0 ,     0 ,     9 ,     5 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     3 ,     5 ,    
    0 ,     0 ,     0 ,     3 ,     3 ,     9 ,     5 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     9 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0         };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 40:

// 40: Bouncing Required
//start={8,2};
start[0]=7;
start[1]=1;
lSize[0]=21;
lSize[1]=11;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     13,     0 ,     0 ,    
    0 ,     3 ,     3 ,     8 ,     0 ,     0 ,
        3 ,     3 ,     0 ,     3 ,     0 ,    
    0 ,     3 ,     0 ,     8 ,     1 ,     0 ,
        3 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     3 ,     3 ,     8 ,     3 ,     0 ,
        3 ,     3 ,     0 ,     0 ,     14,    
    0 ,     3 ,     13,     8 ,     8 ,     0 ,
        0 ,     3 ,     8 ,     0 ,     13,    
    0 ,     3 ,     0 ,     14,     3 ,     0 ,
        0 ,     3 ,     0 ,     14,     0 ,    
    0 ,     0 ,     0 ,     8 ,     1 ,     0 ,
        0 ,     1 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0     };

lSize[2] = lSize[0]*lSize[1]/2 + 1;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 41:

// 41: Ferrying
//start={21,2};
start[0]=20;
start[1]=1;
lSize[0]=27;
lSize[1]=12;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     1 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     3 ,     0 ,     0 ,    
        0 ,     0 ,     1 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     3 ,     3 ,     0 ,
    0 ,     0 ,     3 ,     3 ,     3 ,     3 ,    
        0 ,     0 ,     0 ,     8 ,     8 ,     0 ,
    0 ,     0 ,     12,     3 ,     3 ,     3 ,    
        0 ,     0 ,     0 ,     3 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     12,    
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     12,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
    0 ,     1 ,     3 ,     3 ,     0 ,     0 ,    
        1 ,     3 ,     1 ,     0 ,     0 ,     0 ,
    0 ,     1 ,     3 ,     1 ,     3 ,     0 ,    
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0     };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 42:

// 42: Floating
//start={11,2};
start[0]=10;
start[1]=1;
lSize[0]=22;
lSize[1]=10;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     1 ,     0 ,
    0 ,     1 ,     0 ,     1 ,     1 ,    
        1 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     1 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     12,     0 ,     1 ,     0 ,    
        0 ,     0 ,     0 ,     1 ,     0 ,
    0 ,     1 ,     0 ,     0 ,     0 ,    
        1 ,     0 ,     0 ,     1 ,     0 ,
    0 ,     1 ,     0 ,     0 ,     0 ,    
        1 ,     0 ,     0 ,     3 ,     0 ,
    0 ,     1 ,     0 ,     3 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     1 ,     0 ,     3 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     3 ,     3 ,    
        1 ,     0 ,     0 ,     3 ,     0 ,
    0 ,     1 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0         };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 43:

// 43: Three Ways To Go
//start={11,8};
start[0]=10;
start[1]=7;
lSize[0]=19;
lSize[1]=13;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     4 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     10,     0 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     1 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     1 ,     0 ,     0 ,    
    0 ,     0 ,     8 ,     1 ,     1 ,     3 ,     0 ,
        0 ,     4 ,     4 ,     0 ,     3 ,     3 ,    
    0 ,     0 ,     10,     0 ,     0 ,     10,     0 ,
        0 ,     8 ,     8 ,     0 ,     2 ,     3 ,    
    0 ,     4 ,     4 ,     0 ,     0 ,     2 ,     0 ,
        4 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0         };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 44:

// 44: Lure
//extra padding is needed on the right
//start={11,3};
start[0]=10;
start[1]=2;
lSize[0]=17;
lSize[1]=9;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     1 ,     0 ,     0 ,
        0 ,     1 ,     1 ,     0 ,    
    0 ,     1 ,     1 ,     1 ,     0 ,
        0 ,     1 ,     1 ,     0 ,    
    0 ,     8 ,     1 ,     8 ,     0 ,
        0 ,     1 ,     1 ,     0 ,    
    0 ,     0 ,     1 ,     0 ,     0 ,
        3 ,     3 ,     3 ,     0 ,    
    0 ,     10,     3 ,     3 ,     0 ,
        3 ,     3 ,     3 ,     0 ,    
    0 ,     3 ,     0 ,     0 ,     0 ,
        3 ,     1 ,     0 ,     0 ,    
    0 ,     0 ,     4 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0     };

lSize[2] = lSize[0]*lSize[1]/2 + 1;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 45:

// 45: Refraction
//start={4,2};
start[0]=3;
start[1]=1;
lSize[0]=23;
lSize[1]=11;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     1 ,     0 ,     0 ,     0 ,     0 ,
        1 ,     1 ,     0 ,     0 ,     0 ,    
    0 ,     1 ,     3 ,     3 ,     0 ,     0 ,
        1 ,     7 ,     3 ,     0 ,     0 ,    
    0 ,     1 ,     9 ,     0 ,     3 ,     0 ,
        0 ,     0 ,     9 ,     3 ,     3 ,    
    0 ,     0 ,     3 ,     7 ,     3 ,     0 ,
        0 ,     0 ,     4 ,     3 ,     3 ,    
    0 ,     0 ,     0 ,     3 ,     3 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     1 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     3 ,    
    0 ,     0 ,     0 ,     0 ,     3 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     3 ,    
    0 ,     0 ,     7 ,     0 ,     3 ,     0 ,
        0 ,     3 ,     0 ,     1 ,     0 ,    
    0 ,     3 ,     3 ,     1 ,     0 ,     0 ,
        0 ,     3 ,     1 ,     0 ,     0 ,    
    0 ,     0 ,     1 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0     };

lSize[2] = lSize[0]*lSize[1]/2 + 1;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 46:

// 46: Please Skate Safely
//start={10,2};
start[0]=9;
start[1]=1;
lSize[0]=19;
lSize[1]=10;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     0 ,     0 ,    
        0 ,     1 ,     1 ,     0 ,     0 ,
    0 ,     5 ,     0 ,     5 ,     0 ,    
        0 ,     0 ,     0 ,     1 ,     0 ,
    0 ,     1 ,     7 ,     3 ,     1 ,    
        0 ,     9 ,     9 ,     0 ,     0 ,
    0 ,     9 ,     9 ,     9 ,     1 ,    
        1 ,     3 ,     3 ,     3 ,     0 ,
    0 ,     9 ,     9 ,     9 ,     1 ,    
        0 ,     9 ,     9 ,     0 ,     0 ,
    0 ,     1 ,     7 ,     3 ,     1 ,    
        0 ,     0 ,     0 ,     1 ,     0 ,
    0 ,     5 ,     0 ,     5 ,     0 ,    
        0 ,     1 ,     1 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0         };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 47:

// 47: All Wound Up
//start={13,4};
start[0]=12;
start[1]=3;
lSize[0]=23;
lSize[1]=15;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        4 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     4 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        4 ,     0 ,     0 ,     0 ,     0 ,     3 ,     0 ,    
    0 ,     4 ,     1 ,     3 ,     3 ,     3 ,     1 ,     0 ,
        6 ,     0 ,     5 ,     3 ,     3 ,     3 ,     0 ,    
    0 ,     8 ,     0 ,     0 ,     3 ,     3 ,     5 ,     0 ,
        4 ,     0 ,     3 ,     0 ,     3 ,     0 ,     3 ,    
    0 ,     4 ,     8 ,     3 ,     3 ,     3 ,     0 ,     0 ,
        4 ,     0 ,     3 ,     3 ,     0 ,     3 ,     3 ,    
    0 ,     8 ,     0 ,     3 ,     0 ,     0 ,     3 ,     0 ,
        6 ,     1 ,     3 ,     0 ,     0 ,     0 ,     3 ,    
    0 ,     4 ,     3 ,     0 ,     0 ,     0 ,     3 ,     0 ,
        4 ,     3 ,     0 ,     0 ,     1 ,     3 ,     3 ,    
    0 ,     4 ,     3 ,     0 ,     0 ,     5 ,     0 ,     0 ,
        4 ,     3 ,     3 ,     0 ,     3 ,     3 ,     3 ,    
    0 ,     4 ,     0 ,     3 ,     3 ,     0 ,     3 ,     0 ,
        4 ,     5 ,     3 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     1 ,     3 ,     3 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0         };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 48:

// 48: Maze
// this level needs extra padding on the right.
// Emi can jump off the right side of the screen!
//start={13,2};
start[0]=12;
start[1]=1;
lSize[0]=25;
lSize[1]=15;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     4 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     4 ,     4 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     4 ,     0 ,    
    0 ,     3 ,     0 ,     3 ,     3 ,     7 ,     3 ,     0 ,
        5 ,     0 ,     0 ,     0 ,     3 ,     10,     0 ,    
    0 ,     0 ,     0 ,     5 ,     0 ,     3 ,     5 ,     0 ,
        5 ,     0 ,     5 ,     3 ,     0 ,     5 ,     0 ,    
    0 ,     0 ,     5 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        5 ,     3 ,     0 ,     5 ,     0 ,     5 ,     0 ,    
    0 ,     0 ,     5 ,     3 ,     3 ,     0 ,     0 ,     0 ,
        5 ,     3 ,     0 ,     0 ,     3 ,     3 ,     0 ,    
    0 ,     0 ,     3 ,     3 ,     0 ,     0 ,     3 ,     0 ,
        3 ,     0 ,     0 ,     0 ,     3 ,     5 ,     0 ,    
    0 ,     5 ,     0 ,     5 ,     0 ,     0 ,     3 ,     0 ,
        0 ,     3 ,     0 ,     0 ,     3 ,     8 ,     0 ,    
    0 ,     5 ,     3 ,     5 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     3 ,     0 ,     7 ,     0 ,    
    0 ,     5 ,     3 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        3 ,     3 ,     0 ,     0 ,     0 ,     5 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     10,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     5 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0         };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 49:

// 49: Three More Ways
//this level needs extra padding on top and right
//start={13,8};
start[0]=12;
start[1]=7;
lSize[0]=22;
lSize[1]=16;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     2 ,     0 ,     0 ,     2 ,     0 ,     0 ,    
        0 ,     0 ,     4 ,     3 ,     3 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     3 ,     3 ,     3 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     10,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     4 ,     2 ,     8 ,     3 ,     0 ,     0 ,    
        0 ,     0 ,     1 ,     3 ,     8 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     2 ,     0 ,     0 ,     2 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     1 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     1 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     3 ,     1 ,     8 ,     3 ,     0 ,     0 ,    
        0 ,     8 ,     3 ,     0 ,     3 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     10,     0 ,     0 ,     10,     3 ,     0 ,    
        3 ,     3 ,     8 ,     0 ,     2 ,     3 ,     3 ,     0 ,
    0 ,     0 ,     3 ,     0 ,     0 ,     2 ,     10,     0 ,    
        10,     0 ,     0 ,     0 ,     0 ,     3 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     8 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0         };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 50:

// 50: Revolver Cannon
//start={9,2};
start[0]=8;
start[1]=1;
lSize[0]=20;
lSize[1]=12;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     1 ,     3 ,     0 ,     0 ,     0 ,
    0 ,     1 ,     6 ,     0 ,     0 ,     0 ,    
        1 ,     1 ,     3 ,     2 ,     0 ,     0 ,
    0 ,     1 ,     0 ,     2 ,     2 ,     0 ,    
        1 ,     1 ,     5 ,     3 ,     2 ,     0 ,
    0 ,     1 ,     0 ,     2 ,     7 ,     2 ,    
        1 ,     1 ,     0 ,     2 ,     3 ,     0 ,
    0 ,     1 ,     0 ,     2 ,     2 ,     2 ,    
        1 ,     1 ,     0 ,     7 ,     2 ,     0 ,
    0 ,     1 ,     0 ,     0 ,     0 ,     0 ,    
        1 ,     1 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     5 ,     5 ,     0 ,    
        0 ,     0 ,     5 ,     5 ,     7 ,     0 ,
    0 ,     0 ,     0 ,     10,     10,     0 ,    
        0 ,     0 ,     5 ,     5 ,     5 ,     0 ,
    0 ,     0 ,     0 ,     5 ,     5 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0         };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 51:

// 51: Telephone
//start={11,8};
start[0]=10;
start[1]=7;
lSize[0]=19;
lSize[1]=13;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     13,     3 ,     0 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     3 ,     0 ,     0 ,
        3 ,     3 ,     8 ,     3 ,     3 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     3 ,     0 ,     0 ,
        3 ,     0 ,     3 ,     0 ,     3 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     3 ,     0 ,     0 ,
        0 ,     5 ,     6 ,     5 ,     0 ,     0 ,    
    0 ,     0 ,     6 ,     6 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     4 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     6 ,     6 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     6 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     3 ,     5 ,     5 ,     0 ,
        0 ,     3 ,     3 ,     3 ,     5 ,     5 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0         };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 52:

// 52: Green Honey
//start={8,13};
start[0]=7;
start[1]=12;
lSize[0]=23;
lSize[1]=15;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     0 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     3 ,     3 ,     3 ,     0 ,
        3 ,     0 ,     3 ,     0 ,     0 ,     3 ,     0 ,    
    0 ,     3 ,     0 ,     0 ,     0 ,     0 ,     8 ,     0 ,
        0 ,     3 ,     0 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     3 ,     3 ,     3 ,     3 ,     0 ,
        1 ,     0 ,     3 ,     0 ,     0 ,     3 ,     0 ,    
    0 ,     1 ,     0 ,     3 ,     3 ,     3 ,     8 ,     0 ,
        1 ,     0 ,     3 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     4 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     1 ,     3 ,     3 ,     3 ,     0 ,     1 ,    
    0 ,     6 ,     0 ,     3 ,     3 ,     0 ,     4 ,     0 ,
        0 ,     8 ,     0 ,     0 ,     0 ,     1 ,     0 ,    
    0 ,     0 ,     1 ,     0 ,     0 ,     1 ,     0 ,     0 ,
        0 ,     6 ,     1 ,     1 ,     1 ,     1 ,     1 ,    
    0 ,     4 ,     0 ,     5 ,     5 ,     0 ,     10,     0 ,
        1 ,     0 ,     8 ,     9 ,     8 ,     0 ,     100,   
    0 ,     0 ,     0 ,     1 ,     1 ,     0 ,     1 ,     0 ,
        0 ,     0 ,     0 ,     1 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0         };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 53:

// 53: Switch
//start={14,2};
start[0]=13;
start[1]=1;
lSize[0]=22;
lSize[1]=12;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
        0 ,     3 ,     3 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     7 ,     0 ,     0 ,     0 ,    
        0 ,     3 ,     3 ,     0 ,     3 ,     0 ,
    0 ,     0 ,     3 ,     7 ,     8 ,     3 ,    
        4 ,     0 ,     7 ,     7 ,     3 ,     0 ,
    0 ,     0 ,     8 ,     7 ,     3 ,     3 ,    
        4 ,     8 ,     0 ,     7 ,     3 ,     0 ,
    0 ,     1 ,     10,     7 ,     0 ,     0 ,    
        1 ,     0 ,     8 ,     0 ,     10,     0 ,
    0 ,     8 ,     8 ,     0 ,     0 ,     3 ,    
        1 ,     1 ,     0 ,     8 ,     0 ,     0 ,
    0 ,     1 ,     0 ,     1 ,     1 ,     0 ,    
        0 ,     0 ,     1 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     7 ,     1 ,     1 ,     0 ,    
        0 ,     0 ,     0 ,     1 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     1 ,     0 ,     0 ,    
        0 ,     0 ,     1 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0     };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 54:

// 54: Island Variation
//start={11,2};
start[0]=10;
start[1]=1;
lSize[0]=21;
lSize[1]=13;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     3 ,     0 ,    
    0 ,     0 ,     1 ,     0 ,     3 ,     3 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     3 ,     3 ,    
    0 ,     0 ,     3 ,     3 ,     3 ,     3 ,     0 ,
        0 ,     3 ,     0 ,     3 ,     0 ,     3 ,    
    0 ,     0 ,     0 ,     0 ,     8 ,     3 ,     0 ,
        0 ,     3 ,     3 ,     0 ,     0 ,     3 ,    
    0 ,     3 ,     0 ,     8 ,     3 ,     3 ,     0 ,
        1 ,     8 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     3 ,     0 ,     8 ,     3 ,     3 ,     0 ,
        0 ,     3 ,     3 ,     0 ,     0 ,     3 ,    
    0 ,     0 ,     0 ,     0 ,     8 ,     3 ,     0 ,
        0 ,     3 ,     0 ,     3 ,     0 ,     3 ,    
    0 ,     0 ,     3 ,     3 ,     3 ,     3 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     3 ,     3 ,    
    0 ,     0 ,     1 ,     0 ,     3 ,     3 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     3 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0        };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 55:

// 55: Motion Sickness
// extra padding is needed on left and bottom
//start={5,6};
start[0]=4;
start[1]=5;
lSize[0]=23;
lSize[1]=15;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     3 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     8 ,     0 ,
        0 ,     0 ,     1 ,     0 ,     0 ,     1 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     10,     0 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     10,     1 ,     0 ,     0 ,
        0 ,     0 ,     1 ,     1 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     10,     10,     0 ,     10,     0 ,     0 ,
        0 ,     1 ,     0 ,     0 ,     1 ,     1 ,     0 ,    
    0 ,     1 ,     0 ,     1 ,     10,     0 ,     10,     0 ,
        0 ,     10,     10,     1 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     1 ,     0 ,     1 ,     0 ,     0 ,     0 ,
        0 ,     1 ,     0 ,     10,     0 ,     0 ,     0 ,    
    0 ,     8 ,     1 ,     1 ,     0 ,     0 ,     3 ,     0 ,
        0 ,     10,     1 ,     0 ,     0 ,     7 ,     0 ,    
    0 ,     1 ,     7 ,     0 ,     0 ,     0 ,     3 ,     0 ,
        0 ,     1 ,     0 ,     0 ,     0 ,     3 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 56:

// 56: Tri Mesh
//start={11,2};
start[0]=10;
start[1]=1;
lSize[0]=21;
lSize[1]=15;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        3 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     9 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        9 ,     9 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     9 ,     0 ,     0 ,     0 ,     4 ,     0 ,
        9 ,     0 ,     5 ,     0 ,     0 ,     0 ,     1 ,    
    0 ,     0 ,     3 ,     5 ,     0 ,     0 ,     9 ,     0 ,
        9 ,     3 ,     3 ,     5 ,     0 ,     1 ,     0 ,    
    0 ,     105,    0 ,     0 ,     5 ,     3 ,     9 ,     0 ,
        5 ,     0 ,     9 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     5 ,     0 ,     0 ,     5 ,     3 ,     9 ,     0 ,
        5 ,     3 ,     3 ,     5 ,     0 ,     3 ,     0 ,    
    0 ,     0 ,     9 ,     5 ,     0 ,     0 ,     9 ,     0 ,
        3 ,     0 ,     5 ,     0 ,     0 ,     0 ,     1 ,    
    0 ,     0 ,     3 ,     0 ,     0 ,     0 ,     4 ,     0 ,
        3 ,     3 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     3 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        3 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 57:

// 57: Deslippify
//start={4,2};
start[0]=3;
start[1]=1;
lSize[0]=23;
lSize[1]=15;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,
        1 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     3 ,     0 ,     0 ,     0 ,
        3 ,     0 ,     1 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     9 ,     1 ,     3 ,     0 ,     0 ,     0 ,
        3 ,     9 ,     0 ,     9 ,     0 ,     0 ,     0 ,    
    0 ,     9 ,     0 ,     3 ,     9 ,     0 ,     0 ,     0 ,
        3 ,     0 ,     0 ,     3 ,     8 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     3 ,     0 ,     101,    0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     9 ,     101,   
    0 ,     0 ,     0 ,     3 ,     0 ,     9 ,     1 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     9 ,     0 ,     1 ,    
    0 ,     0 ,     0 ,     0 ,     8 ,     9 ,     101,    0 ,
        3 ,     0 ,     0 ,     9 ,     9 ,     9 ,     1 ,    
    0 ,     9 ,     0 ,     109,    0 ,     8 ,     101,    0 ,
        0 ,     3 ,     0 ,     5 ,     0 ,     9 ,     1 ,    
    0 ,     0 ,     1 ,     1 ,     0 ,     0 ,     1 ,     0 ,
        0 ,     0 ,     6 ,     6 ,     6 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     6 ,     101,    0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0   };

lSize[2] = lSize[0]*lSize[1]/2 + 1;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 58:

// 58: A Little Light Lifting
//start={5,3};
start[0]=4;
start[1]=2;
lSize[0]=18;
lSize[1]=11;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     3 ,     0 ,     0 ,
        0 ,     3 ,     3 ,     3 ,     0 ,    
    0 ,     3 ,     3 ,     0 ,     3 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     3 ,    
    0 ,     3 ,     3 ,     0 ,     3 ,     0 ,
        0 ,     3 ,     0 ,     0 ,     3 ,    
    0 ,     3 ,     13,     4 ,     3 ,     0 ,
        3 ,     0 ,     4 ,     3 ,     0 ,    
    0 ,     0 ,     0 ,     13,     3 ,     0 ,
        3 ,     0 ,     3 ,     4 ,     0 ,    
    0 ,     0 ,     3 ,     4 ,     3 ,     0 ,
        3 ,     3 ,     3 ,     4 ,     0 ,    
    0 ,     3 ,     0 ,     3 ,     3 ,     0 ,
        3 ,     0 ,     0 ,     3 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 59:

// 59: Leftovers
// extra padding needed on right
//start={17,5};
start[0]=16;
start[1]=4;
lSize[0]=21;
lSize[1]=14;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     3 ,     7 ,     0 ,     0 ,    
        0 ,     9 ,     3 ,     3 ,     3 ,     0 ,     0 ,
    0 ,     3 ,     3 ,     3 ,     10,     3 ,     0 ,    
        0 ,     10,     3 ,     3 ,     3 ,     3 ,     0 ,
    0 ,     3 ,     3 ,     0 ,     7 ,     3 ,     0 ,    
        3 ,     9 ,     0 ,     0 ,     0 ,     3 ,     0 ,
    0 ,     3 ,     0 ,     0 ,     0 ,     3 ,     0 ,    
        3 ,     0 ,     0 ,     0 ,     0 ,     10,     0 ,
    0 ,     3 ,     0 ,     0 ,     0 ,     3 ,     0 ,    
        3 ,     0 ,     0 ,     0 ,     0 ,     3 ,     0 ,
    0 ,     3 ,     4 ,     0 ,     0 ,     0 ,     0 ,    
        3 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     3 ,     3 ,     0 ,     0 ,     0 ,     0 ,    
        3 ,     3 ,     3 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     3 ,     6 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     3 ,     5 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     3 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0      };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 60:

// 60: Two Fish
//start={7,2};
start[0]=6;
start[1]=1;
lSize[0]=23;
lSize[1]=15;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     6 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     6 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     6 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     6 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        4 ,     0 ,     4 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     6 ,     6 ,     6 ,     0 ,     0 ,     0 ,     0 ,
        4 ,     4 ,     4 ,     4 ,     0 ,     0 ,     0 ,    
    0 ,     6 ,     6 ,     6 ,     4 ,     0 ,     5 ,     0 ,
        0 ,     4 ,     4 ,     4 ,     4 ,     5 ,     0 ,    
    0 ,     6 ,     6 ,     6 ,     13,     3 ,     0 ,     0 ,
        0 ,     4 ,     4 ,     4 ,     4 ,     5 ,     5 ,    
    0 ,     6 ,     6 ,     6 ,     4 ,     3 ,     3 ,     0 ,
        4 ,     4 ,     4 ,     4 ,     5 ,     5 ,     5 ,    
    0 ,     6 ,     6 ,     6 ,     5 ,     3 ,     3 ,     0 ,
        4 ,     0 ,     4 ,     0 ,     13,     5 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     5 ,     3 ,     3 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     5 ,     5 ,     5 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     3 ,     3 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     5 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0      };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 61:

// 61: Demolition
//start={11,2};
start[0]=10;
start[1]=1;
lSize[0]=20;
lSize[1]=14;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     5 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     5 ,     5 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     5 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     5 ,     5 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     5 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     4 ,     0 ,     0 ,     4 ,     0 ,
    0 ,     0 ,     4 ,     4 ,     0 ,     4 ,     4 ,    
        3 ,     13,     4 ,     4 ,     6 ,     4 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     6 ,     6 ,     4 ,    
        3 ,     3 ,     0 ,     1 ,     6 ,     0 ,     0 ,
    0 ,     3 ,     3 ,     3 ,     6 ,     6 ,     1 ,    
        3 ,     3 ,     3 ,     0 ,     6 ,     0 ,     0 ,
    0 ,     3 ,     4 ,     4 ,     0 ,     1 ,     4 ,    
        1 ,     0 ,     4 ,     4 ,     4 ,     4 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     4 ,     0 ,     4 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 62:

// 62: Crooked
//start={10,2};
start[0]=9;
start[1]=1;
lSize[0]=18;
lSize[1]=15;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     3 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     9 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     9 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     8 ,     8 ,     1 ,     0 ,     0 ,     0 ,    
    0 ,     9 ,     0 ,     0 ,     1 ,     3 ,     0 ,     0 ,
        3 ,     8 ,     8 ,     0 ,     3 ,     3 ,     0 ,    
    0 ,     9 ,     0 ,     0 ,     1 ,     0 ,     3 ,     0 ,
        0 ,     8 ,     8 ,     0 ,     3 ,     3 ,     103,   
    0 ,     0 ,     0 ,     0 ,     1 ,     0 ,     3 ,     0 ,
        0 ,     0 ,     9 ,     0 ,     3 ,     3 ,     0 ,    
    0 ,     0 ,     0 ,     9 ,     1 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     1 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0      };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 63:

// 63: Route Finder
//start={12,3};
start[0]=11;
start[1]=2;
lSize[0]=21;
lSize[1]=16;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     3 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     3 ,     3 ,     3 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     3 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     3 ,     5 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     3 ,     3 ,     3 ,     3 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     3 ,     5 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     3 ,     5 ,     5 ,     3 ,     3 ,     0 ,     0 ,
    0 ,     3 ,     0 ,     0 ,     5 ,     5 ,     3 ,     6 ,    
        5 ,     0 ,     5 ,     0 ,     5 ,     3 ,     0 ,     0 ,
    0 ,     5 ,     5 ,     0 ,     5 ,     3 ,     5 ,     4 ,    
        3 ,     5 ,     5 ,     5 ,     0 ,     0 ,     9 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     5 ,     3 ,     5 ,     0 ,    
        3 ,     0 ,     5 ,     5 ,     0 ,     3 ,     0 ,     0 ,
    0 ,     3 ,     3 ,     5 ,     5 ,     0 ,     9 ,     0 ,    
        0 ,     3 ,     0 ,     3 ,     3 ,     0 ,     0 ,     0 ,
    0 ,     3 ,     3 ,     3 ,     0 ,     3 ,     6 ,     0 ,    
        0 ,     0 ,     3 ,     0 ,     0 ,     6 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0    };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 64:

// 64: Lifts
//start={22,3};
start[0]=21;
start[1]=2;
lSize[0]=26;
lSize[1]=13;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     4 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     4 ,     6 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     6 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     8 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     6 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     6 ,     4 ,     0 ,     0 ,     0 ,
        0 ,     4 ,     6 ,     4 ,     0 ,     0 ,    
    0 ,     4 ,     6 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     4 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     13,     0 ,     13,     0 ,     0 ,    
    0 ,     10,     0 ,     0 ,     13,     0 ,     0 ,
        13,     0 ,     0 ,     3 ,     8 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     3 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     3 ,     6 ,    
    0 ,     8 ,     0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     6 ,    
    0 ,     1 ,     0 ,     0 ,     0 ,     4 ,     0 ,
        1 ,     1 ,     0 ,     0 ,     5 ,     5 ,    
    0 ,     1 ,     0 ,     0 ,     0 ,     5 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0  };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 65:

// 65: Clearance
// extra padding needed on right
//start={20,6};
start[0]=19;
start[1]=5;
lSize[0]=22;
lSize[1]=15;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     3 ,     3 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     1 ,     3 ,     1 ,     0 ,
        1 ,     0 ,     0 ,     12,     3 ,     3 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     3 ,     8 ,     0 ,
        3 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     1 ,     0 ,
        3 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     1 ,     0 ,
        1 ,     0 ,     3 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     3 ,     0 ,     0 ,     0 ,     0 ,
        1 ,     3 ,     3 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     3 ,     0 ,     0 ,     0 ,     0 ,
        1 ,     3 ,     10,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     3 ,     0 ,     0 ,     12,     0 ,
        1 ,     0 ,     7 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     1 ,     1 ,     1 ,     1 ,     1 ,     1 ,     0 ,
        0 ,     1 ,     1 ,     1 ,     1 ,     1 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 66:

// 66: Wheel
//start={16,2};
start[0]=15;
start[1]=1;
lSize[0]=23;
lSize[1]=14;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     3 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     3 ,     1 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     3 ,     3 ,     3 ,     0 ,     0 ,     0 ,    
        3 ,     3 ,     1 ,     3 ,     0 ,     0 ,     0 ,
    0 ,     3 ,     0 ,     0 ,     3 ,     0 ,     0 ,    
        1 ,     0 ,     1 ,     0 ,     1 ,     0 ,     0 ,
    0 ,     1 ,     0 ,     0 ,     1 ,     3 ,     0 ,    
        3 ,     1 ,     9 ,     1 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     9 ,     9 ,     0 ,     3 ,     0 ,    
        3 ,     0 ,     9 ,     0 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     9 ,     9 ,     0 ,     3 ,     0 ,    
        3 ,     1 ,     9 ,     1 ,     3 ,     0 ,     0 ,
    0 ,     1 ,     0 ,     0 ,     1 ,     3 ,     0 ,    
        1 ,     0 ,     101,    0 ,     1 ,     0 ,     0 ,
    0 ,     3 ,     0 ,     0 ,     3 ,     4 ,     4 ,    
        3 ,     3 ,     1 ,     3 ,     0 ,     9 ,     0 ,
    0 ,     3 ,     3 ,     3 ,     0 ,     4 ,     0 ,    
        0 ,     3 ,     101,    0 ,     0 ,     4 ,     0 ,
    0 ,     0 ,     3 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0      };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 67:

// 67: More Lifting
//start={22,8};
start[0]=21;
start[1]=7;
lSize[0]=24;
lSize[1]=9;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,    
    0 ,     3 ,     0 ,     0 ,     0 ,
        3 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     0 ,
        3 ,     3 ,     3 ,     3 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,
        3 ,     3 ,     2 ,     3 ,    
    0 ,     13,     13,     3 ,     0 ,
        1 ,     13,     0 ,     3 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,
        1 ,     3 ,     0 ,     3 ,    
    0 ,     0 ,     0 ,     1 ,     0 ,
        1 ,     0 ,     0 ,     0 ,    
    0 ,     1 ,     1 ,     1 ,     0 ,
        0 ,     1 ,     1 ,     0 ,    
    0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     3 ,     3 ,     0 ,    
    0 ,     0 ,     3 ,     3 ,     0 ,
        0 ,     0 ,     14,     0 ,    
    0 ,     0 ,     3 ,     13,     0 ,
        0 ,     0 ,     3 ,     1 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 68:

// 68: Spinners
//start={13,2};
start[0]=12;
start[1]=1;
lSize[0]=23;
lSize[1]=14;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     4 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     4 ,     8 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     4 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
        4 ,     0 ,     3 ,     3 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     10,     0 ,     0 ,     0 ,    
        4 ,     0 ,     1 ,     1 ,     8 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     8 ,     0 ,     6 ,     0 ,    
        4 ,     0 ,     1 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     1 ,     9 ,     0 ,     0 ,     3 ,     0 ,    
        1 ,     0 ,     9 ,     0 ,     0 ,     5 ,     0 ,
    0 ,     1 ,     10,     0 ,     0 ,     3 ,     5 ,    
        1 ,     9 ,     0 ,     0 ,     0 ,     3 ,     0 ,
    0 ,     0 ,     9 ,     0 ,     0 ,     3 ,     5 ,    
        1 ,     0 ,     1 ,     1 ,     0 ,     3 ,     0 ,
    0 ,     7 ,     0 ,     7 ,     7 ,     3 ,     5 ,    
        1 ,     0 ,     1 ,     10,     103,    5 ,     0 ,
    0 ,     1 ,     1 ,     1 ,     1 ,     3 ,     0 ,    
        0 ,     1 ,     0 ,     7 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0   };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 69:

// 69: Carefully Does It
//start={14,2};
start[0]=13;
start[1]=1;
lSize[0]=22;
lSize[1]=16;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     3 ,    
        0 ,     4 ,     0 ,     0 ,     0 ,     0 ,     3 ,     0 ,
    0 ,     4 ,     4 ,     0 ,     0 ,     0 ,     108,    1 ,    
        0 ,     7 ,     0 ,     0 ,     0 ,     3 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     1 ,     1 ,     1 ,     0 ,     3 ,    
        7 ,     3 ,     1 ,     1 ,     1 ,     3 ,     3 ,     0 ,
    0 ,     3 ,     9 ,     0 ,     0 ,     0 ,     108,    1 ,    
        4 ,     10,     0 ,     9 ,     4 ,     0 ,     3 ,     0 ,
    0 ,     3 ,     7 ,     0 ,     0 ,     0 ,     0 ,     3 ,    
        7 ,     3 ,     0 ,     1 ,     1 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     1 ,     1 ,     1 ,     0 ,     0 ,    
        1 ,     0 ,     8 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     0 ,     0 ,     1 ,     0 ,     0 ,    
        0 ,     1 ,     1 ,     8 ,     1 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     0 ,     1 ,     0 ,     0 ,     0 ,    
        0 ,     7 ,     1 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     1 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0    };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 70:

// 70: Breakthrough
//start={12,9};
start[0]=11;
start[1]=8;
lSize[0]=28;
lSize[1]=13;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     4 ,     0 ,     0 ,     4 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     9 ,     0 ,    
    0 ,     0 ,     0 ,     9 ,     0 ,     9 ,     0 ,
        9 ,     0 ,     0 ,     0 ,     0 ,     9 ,    
    0 ,     9 ,     0 ,     9 ,     3 ,     9 ,     0 ,
        9 ,     0 ,     0 ,     3 ,     7 ,     9 ,    
    0 ,     9 ,     0 ,     9 ,     10,     9 ,     0 ,
        9 ,     0 ,     0 ,     3 ,     7 ,     9 ,    
    0 ,     9 ,     0 ,     9 ,     1 ,     9 ,     0 ,
        9 ,     0 ,     0 ,     3 ,     7 ,     9 ,    
    0 ,     0 ,     0 ,     9 ,     10,     9 ,     0 ,
        9 ,     0 ,     0 ,     3 ,     7 ,     9 ,    
    0 ,     0 ,     0 ,     0 ,     3 ,     9 ,     0 ,
        9 ,     0 ,     0 ,     0 ,     0 ,     9 ,    
    0 ,     9 ,     0 ,     0 ,     3 ,     9 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     7 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     7 ,     7 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     1 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     1 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     1 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0    };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 71:

// 71: Opportunist
//start={13,4};
start[0]=12;
start[1]=3;
lSize[0]=16;
lSize[1]=9;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,
        4 ,     0 ,     0 ,     0 ,    
    0 ,     3 ,     3 ,     0 ,     0 ,
        0 ,     3 ,     3 ,     0 ,    
    0 ,     0 ,     7 ,     0 ,     0 ,
        0 ,     1 ,     8 ,     0 ,    
    0 ,     1 ,     3 ,     0 ,     0 ,
        1 ,     3 ,     13,     2 ,    
    0 ,     203,    3 ,     0 ,     2 ,
        1 ,     4 ,     13,     2 ,    
    0 ,     1 ,     4 ,     0 ,     2 ,
        0 ,     1 ,     3 ,     2 ,    
    0 ,     0 ,     1 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0   };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 72:

// 72: Upper
//start={11,2};
start[0]=10;
start[1]=1;
lSize[0]=21;
lSize[1]=15;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     3 ,     0 ,    
    0 ,     0 ,     3 ,     0 ,     0 ,     3 ,     3 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     6 ,     0 ,    
    0 ,     0 ,     1 ,     0 ,     0 ,     3 ,     3 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     1 ,     0 ,    
    0 ,     0 ,     14,     3 ,     0 ,     0 ,     0 ,     0 ,
        5 ,     0 ,     8 ,     3 ,     0 ,     8 ,     0 ,    
    0 ,     0 ,     13,     3 ,     0 ,     0 ,     0 ,     0 ,
        1 ,     0 ,     0 ,     3 ,     0 ,     13,     0 ,    
    0 ,     1 ,     1 ,     0 ,     0 ,     3 ,     3 ,     0 ,
        0 ,     1 ,     207,    0 ,     3 ,     3 ,     3 ,    
    0 ,     0 ,     1 ,     0 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     13,     1 ,     0 ,     0 ,     0 ,     3 ,    
    0 ,     3 ,     3 ,     1 ,     13,     3 ,     3 ,     0 ,
        0 ,     13,     0 ,     1 ,     13,     3 ,     0 ,    
    0 ,     3 ,     3 ,     0 ,     1 ,     0 ,     0 ,     0 ,
        0 ,     4 ,     0 ,     0 ,     1 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0      };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 73:

// 73: Radioactive Ice
//start={12,6};
start[0]=11;
start[1]=5;
lSize[0]=23;
lSize[1]=15;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     3 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     1 ,     0 ,     0 ,     3 ,     9 ,     0 ,
        0 ,     1 ,     0 ,     0 ,     0 ,     9 ,     0 ,    
    0 ,     1 ,     1 ,     0 ,     3 ,     9 ,     9 ,     0 ,
        1 ,     107,    0 ,     0 ,     9 ,     9 ,     3 ,    
    0 ,     1 ,     1 ,     0 ,     5 ,     8 ,     9 ,     0 ,
        0 ,     1 ,     0 ,     1 ,     9 ,     9 ,     0 ,    
    0 ,     0 ,     1 ,     1 ,     5 ,     9 ,     9 ,     0 ,
        0 ,     0 ,     1 ,     107,    9 ,     9 ,     3 ,    
    0 ,     0 ,     1 ,     1 ,     5 ,     9 ,     9 ,     0 ,
        0 ,     1 ,     0 ,     1 ,     9 ,     9 ,     0 ,    
    0 ,     1 ,     1 ,     0 ,     5 ,     8 ,     9 ,     0 ,
        1 ,     107,    0 ,     0 ,     9 ,     9 ,     3 ,    
    0 ,     1 ,     1 ,     0 ,     3 ,     9 ,     9 ,     0 ,
        0 ,     1 ,     0 ,     0 ,     0 ,     9 ,     0 ,    
    0 ,     0 ,     1 ,     0 ,     0 ,     3 ,     9 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     3 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0   };

lSize[2] = lSize[0]*lSize[1]/2 + 1;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 74:

// 74: Pro Skater
//start={9,2};
start[0]=8;
start[1]=1;
lSize[0]=17;
lSize[1]=15;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     3 ,    
    0 ,     0 ,     0 ,     0 ,     9 ,     0 ,     0 ,     0 ,
        0 ,     9 ,     0 ,     9 ,     9 ,     8 ,     5 ,    
    0 ,     9 ,     9 ,     0 ,     3 ,     9 ,     0 ,     0 ,
        0 ,     3 ,     9 ,     9 ,     9 ,     9 ,     3 ,    
    0 ,     9 ,     9 ,     9 ,     9 ,     3 ,     5 ,     0 ,
        1 ,     9 ,     3 ,     3 ,     103,    9 ,     5 ,    
    0 ,     9 ,     9 ,     9 ,     9 ,     3 ,     5 ,     0 ,
        0 ,     3 ,     9 ,     9 ,     9 ,     9 ,     5 ,    
    0 ,     9 ,     9 ,     0 ,     3 ,     9 ,     0 ,     0 ,
        0 ,     9 ,     0 ,     9 ,     9 ,     8 ,     5 ,    
    0 ,     0 ,     0 ,     0 ,     9 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     3 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 75:

// 75: No Swimming Allowed
//start={18,2};
start[0]=17;
start[1]=1;
lSize[0]=23;
lSize[1]=14;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,    
        0 ,     1 ,     0 ,     0 ,     3 ,     3 ,     0 ,
    0 ,     1 ,     0 ,     0 ,     3 ,     3 ,     3 ,    
        0 ,     0 ,     0 ,     0 ,     8 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     8 ,     0 ,     3 ,     3 ,    
        0 ,     0 ,     0 ,     3 ,     0 ,     3 ,     0 ,
    0 ,     0 ,     1 ,     3 ,     8 ,     0 ,     0 ,    
        1 ,     0 ,     0 ,     3 ,     0 ,     10,     0 ,
    0 ,     12,     1 ,     3 ,     3 ,     3 ,     3 ,    
        1 ,     0 ,     0 ,     3 ,     0 ,     12,     0 ,
    0 ,     0 ,     1 ,     8 ,     8 ,     0 ,     0 ,    
        1 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     12,     1 ,     0 ,     0 ,     0 ,     0 ,    
        1 ,     0 ,     0 ,     8 ,     8 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     0 ,     3 ,     0 ,     0 ,    
        1 ,     0 ,     0 ,     3 ,     3 ,     0 ,     0 ,
    0 ,     9 ,     1 ,     0 ,     3 ,     0 ,     0 ,    
        0 ,     9 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0      };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 76:

// 76: Laser Safety
//start={3,6};
start[0]=2;
start[1]=5;
lSize[0]=27;
lSize[1]=11;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     1 ,     0 ,     0 ,    
    0 ,     0 ,     1 ,     1 ,     0 ,     0 ,
        0 ,     3 ,     7 ,     3 ,     0 ,    
    0 ,     3 ,     0 ,     0 ,     3 ,     0 ,
        0 ,     3 ,     0 ,     3 ,     0 ,    
    0 ,     9 ,     0 ,     0 ,     9 ,     0 ,
        0 ,     0 ,     9 ,     0 ,     0 ,    
    0 ,     3 ,     0 ,     0 ,     3 ,     0 ,
        0 ,     9 ,     0 ,     9 ,     0 ,    
    0 ,     3 ,     0 ,     0 ,     3 ,     0 ,
        110,    0 ,     0 ,     0 ,     110,   
    0 ,     3 ,     0 ,     0 ,     3 ,     0 ,
        0 ,     9 ,     0 ,     9 ,     0 ,    
    0 ,     1 ,     3 ,     3 ,     1 ,     0 ,
        0 ,     0 ,     9 ,     0 ,     0 ,    
    0 ,     9 ,     0 ,     0 ,     9 ,     0 ,
        0 ,     3 ,     0 ,     3 ,     0 ,    
    0 ,     3 ,     0 ,     0 ,     3 ,     0 ,
        0 ,     3 ,     7 ,     3 ,     0 ,    
    0 ,     0 ,     1 ,     1 ,     1 ,     0 ,
        0 ,     0 ,     1 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     4 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0      };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 77:

// 77: Sprocket
//start={8,2};
start[0]=7;
start[1]=1;
lSize[0]=15;
lSize[1]=15;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     3 ,     4 ,     0 ,     0 ,    
    0 ,     1 ,     0 ,     10,     10,     0 ,     1 ,     0 ,
        1 ,     0 ,     4 ,     3 ,     4 ,     0 ,     1 ,    
    0 ,     1 ,     3 ,     4 ,     3 ,     3 ,     1 ,     0 ,
        1 ,     1 ,     10,     4 ,     10,     1 ,     1 ,    
    0 ,     1 ,     3 ,     3 ,     3 ,     3 ,     1 ,     0 ,
        1 ,     0 ,     3 ,     3 ,     3 ,     0 ,     1 ,    
    0 ,     1 ,     0 ,     10,     10,     0 ,     1 ,     0 ,
        0 ,     0 ,     3 ,     3 ,     4 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     4 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0    };

lSize[2] = lSize[0]*lSize[1]/2 + 1;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 78:

// 78: Overbuild
// extra padding is needed on right and bottom
//start={19,6};
start[0]=18;
start[1]=5;
lSize[0]=27;
lSize[1]=15;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        1 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     4 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        1 ,     4 ,     1 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     4 ,     13,     1 ,     0 ,     0 ,     0 ,     0 ,
        1 ,     4 ,     1 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     4 ,     0 ,     0 ,     8 ,     201,    8 ,     0 ,
        1 ,     0 ,     4 ,     0 ,     1 ,     1 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     1 ,     0 ,     0 ,
        0 ,     0 ,     4 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     10,     1 ,     10,     0 ,
        0 ,     0 ,     4 ,     0 ,     1 ,     1 ,     0 ,    
    0 ,     0 ,     3 ,     3 ,     0 ,     8 ,     0 ,     0 ,
        0 ,     0 ,     11,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     3 ,     0 ,     11,     0 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     1 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     11,     8 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     10,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     3 ,     1 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     1 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 79:

// 79: Somewhat Constructive
//start={8,2};
start[0]=7;
start[1]=1;
lSize[0]=18;
lSize[1]=15;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     1 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     1 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     1 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     1 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     11,     11,     1 ,     0 ,     0 ,     0 ,
        1 ,     0 ,     0 ,     0 ,     11,     0 ,     0 ,    
    0 ,     1 ,     1 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     1 ,     0 ,     11,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     1 ,     0 ,     0 ,     13,    
    0 ,     0 ,     0 ,     0 ,     1 ,     4 ,     13,     0 ,
        0 ,     0 ,     0 ,     0 ,     13,     13,     3 ,    
    0 ,     0 ,     0 ,     3 ,     1 ,     4 ,     3 ,     0 ,
        0 ,     0 ,     1 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0      };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 80:

// 80: Finishing Strike
//start={11,2};
start[0]=10;
start[1]=1;
lSize[0]=23;
lSize[1]=13;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     3 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     7 ,     3 ,     0 ,    
    0 ,     0 ,     3 ,     0 ,     0 ,     3 ,     0 ,
        0 ,     3 ,     0 ,     5 ,     0 ,     3 ,    
    0 ,     0 ,     7 ,     5 ,     5 ,     7 ,     0 ,
        0 ,     3 ,     5 ,     5 ,     3 ,     3 ,    
    0 ,     203,    0 ,     0 ,     0 ,     0 ,     0 ,
        3 ,     3 ,     3 ,     207,    5 ,     3 ,    
    0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     5 ,     3 ,     5 ,     3 ,    
    0 ,     0 ,     0 ,     5 ,     0 ,     7 ,     0 ,
        4 ,     3 ,     0 ,     3 ,     3 ,     3 ,    
    0 ,     7 ,     3 ,     0 ,     5 ,     0 ,     0 ,
        4 ,     0 ,     3 ,     3 ,     0 ,     3 ,    
    0 ,     4 ,     0 ,     3 ,     0 ,     3 ,     0 ,
        0 ,     0 ,     3 ,     3 ,     3 ,     0 ,    
    0 ,     0 ,     0 ,     5 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     7 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0        };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 81:

// 81: Big Jumps
//start={14,3};
start[0]=13;
start[1]=2;
lSize[0]=22;
lSize[1]=14;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     3 ,     3 ,     0 ,    
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     3 ,     0 ,     5 ,     0 ,    
        0 ,     0 ,     3 ,     0 ,     3 ,     3 ,     0 ,
    0 ,     0 ,     3 ,     0 ,     3 ,     0 ,     3 ,    
        0 ,     3 ,     0 ,     0 ,     0 ,     5 ,     0 ,
    0 ,     205,    0 ,     0 ,     3 ,     5 ,     3 ,    
        3 ,     0 ,     0 ,     0 ,     5 ,     0 ,     0 ,
    0 ,     5 ,     0 ,     0 ,     3 ,     0 ,     3 ,    
        3 ,     0 ,     0 ,     0 ,     3 ,     3 ,     0 ,
    0 ,     1 ,     0 ,     0 ,     0 ,     1 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     3 ,     0 ,     0 ,     1 ,     0 ,     0 ,    
        3 ,     0 ,     0 ,     0 ,     3 ,     3 ,     0 ,
    0 ,     210,    0 ,     210,    0 ,     10,     0 ,    
        3 ,     3 ,     3 ,     3 ,     0 ,     0 ,     0 ,
    0 ,     3 ,     201,    3 ,     0 ,     3 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 82:

// 82: Icy Road
//start={11,5};
start[0]=10;
start[1]=4;
lSize[0]=21;
lSize[1]=9;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     1 ,     0 ,     0 ,
        0 ,     1 ,     1 ,     0 ,    
    0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     3 ,     3 ,     0 ,    
    0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     3 ,     3 ,     0 ,    
    0 ,     0 ,     9 ,     0 ,     0 ,
        0 ,     9 ,     9 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     0 ,
        0 ,     9 ,     9 ,     0 ,    
    0 ,     3 ,     9 ,     3 ,     0 ,
        3 ,     3 ,     3 ,     3 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,
        3 ,     0 ,     0 ,     3 ,    
    0 ,     9 ,     0 ,     9 ,     0 ,
        0 ,     9 ,     9 ,     0 ,    
    0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0   };

lSize[2] = lSize[0]*lSize[1]/2 + 1;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 83:

// 83: Only One Way Up
//start={12,8};
start[0]=11;
start[1]=7;
lSize[0]=22;
lSize[1]=14;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     5 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        5 ,     5 ,     0 ,     3 ,     3 ,     0 ,     0 ,
    0 ,     10,     0 ,     0 ,     3 ,     0 ,     0 ,    
        5 ,     6 ,     0 ,     3 ,     3 ,     0 ,     0 ,
    0 ,     6 ,     3 ,     3 ,     3 ,     0 ,     0 ,    
        6 ,     0 ,     3 ,     3 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     3 ,     3 ,     0 ,     3 ,     0 ,    
        6 ,     3 ,     8 ,     3 ,     0 ,     0 ,     0 ,
    0 ,     13,     3 ,     3 ,     0 ,     7 ,     0 ,    
        0 ,     10,     3 ,     1 ,     0 ,     0 ,     0 ,
    0 ,     3 ,     5 ,     3 ,     3 ,     3 ,     0 ,    
        6 ,     3 ,     0 ,     3 ,     3 ,     4 ,     0 ,
    0 ,     0 ,     3 ,     3 ,     1 ,     4 ,     4 ,    
        6 ,     0 ,     3 ,     0 ,     8 ,     10,     0 ,
    0 ,     6 ,     3 ,     3 ,     3 ,     0 ,     4 ,    
        6 ,     7 ,     3 ,     3 ,     0 ,     4 ,     0 ,
    0 ,     6 ,     3 ,     8 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     3 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0   };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 84:

// 84: Commute
//start={16,12};
start[0]=15;
start[1]=11;
lSize[0]=21;
lSize[1]=15;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     4 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     6 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     13,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        4 ,     2 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     4 ,     13,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     13,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     13,     0 ,     0 ,     4 ,     0 ,
        0 ,     3 ,     3 ,     13,     0 ,     4 ,     4 ,    
    0 ,     0 ,     3 ,     3 ,     13,     4 ,     4 ,     0 ,
        0 ,     3 ,     3 ,     3 ,     13,     4 ,     5 ,    
    0 ,     0 ,     0 ,     3 ,     3 ,     13,     4 ,     0 ,
        0 ,     0 ,     3 ,     3 ,     3 ,     4 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     3 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0   };

lSize[2] = lSize[0]*lSize[1]/2 + 1;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 85:

// 85: House
//start={25,3};
start[0]=24;
start[1]=2;
lSize[0]=27;
lSize[1]=15;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     1 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     1 ,     0 ,     1 ,    
    0 ,     0 ,     0 ,     0 ,     1 ,     1 ,     1 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     1 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     1 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     8 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     8 ,     8 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     8 ,     8 ,     14,     0 ,     0 ,     0 ,
        0 ,     8 ,     8 ,     8 ,     8 ,     0 ,     0 ,    
    0 ,     8 ,     8 ,     8 ,     8 ,     8 ,     0 ,     0 ,
        0 ,     8 ,     8 ,     8 ,     8 ,     0 ,     0 ,    
    0 ,     8 ,     3 ,     3 ,     3 ,     8 ,     0 ,     0 ,
        0 ,     3 ,     3 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     9 ,     9 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     3 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     7 ,     9 ,     9 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     3 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     7 ,     3 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     3 ,     3 ,     3 ,     0 ,     0 ,    
    0 ,     9 ,     9 ,     9 ,     9 ,     9 ,     9 ,     0 ,
        9 ,     9 ,     9 ,     9 ,     9 ,     9 ,     9 ,    
    0 ,     9 ,     9 ,     9 ,     9 ,     9 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0    };

lSize[2] = lSize[0]*lSize[1]/2 + 1;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 86:

// 86: Burn Your Bridges
// extra padding is needed on bottom
//start={11,2};
start[0]=10;
start[1]=1;
lSize[0]=20;
lSize[1]=12;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     1 ,     0 ,    
        0 ,     0 ,     0 ,     8 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     11,     0 ,     0 ,     0 ,
    0 ,     0 ,     11,     0 ,     0 ,     0 ,    
        1 ,     11,     0 ,     0 ,     0 ,     0 ,
    0 ,     11,     0 ,     0 ,     0 ,     0 ,    
        1 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     11,     0 ,     3 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     11,     3 ,     3 ,    
        0 ,     0 ,     0 ,     0 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     11,     3 ,    
        0 ,     0 ,     0 ,     0 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0      };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 87:

// 87: Spinners II
//start={13,2};
start[0]=12;
start[1]=1;
lSize[0]=23;
lSize[1]=14;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     4 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     1 ,     1 ,     0 ,     0 ,    
        0 ,     4 ,     8 ,     10,     0 ,     0 ,     0 ,
    0 ,     4 ,     0 ,     1 ,     0 ,     0 ,     0 ,    
        9 ,     0 ,     7 ,     1 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     10,     2 ,     0 ,     0 ,    
        4 ,     0 ,     1 ,     1 ,     8 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     8 ,     0 ,     6 ,     0 ,    
        4 ,     0 ,     1 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     1 ,     9 ,     0 ,     0 ,     3 ,     0 ,    
        1 ,     0 ,     9 ,     0 ,     0 ,     5 ,     0 ,
    0 ,     1 ,     10,     0 ,     0 ,     3 ,     5 ,    
        1 ,     9 ,     0 ,     0 ,     0 ,     3 ,     0 ,
    0 ,     0 ,     9 ,     0 ,     0 ,     103,    5 ,    
        1 ,     0 ,     1 ,     1 ,     0 ,     3 ,     0 ,
    0 ,     7 ,     0 ,     7 ,     7 ,     3 ,     5 ,    
        1 ,     0 ,     1 ,     10,     103,    5 ,     0 ,
    0 ,     1 ,     1 ,     1 ,     1 ,     3 ,     0 ,    
        0 ,     1 ,     0 ,     7 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0     };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 88:

// 88: Wave Cannon
//start={12,3};
start[0]=11;
start[1]=2;
lSize[0]=23;
lSize[1]=16;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     3 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     3 ,     3 ,     0 ,     0 ,     0 ,     205,    0 ,    
        0 ,     7 ,     0 ,     0 ,     0 ,     5 ,     205,    0 ,
    0 ,     3 ,     3 ,     0 ,     205,    0 ,     0 ,     0 ,    
        0 ,     3 ,     0 ,     0 ,     0 ,     5 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     5 ,     5 ,     5 ,     0 ,    
        0 ,     203,    0 ,     0 ,     5 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     5 ,     5 ,     5 ,     0 ,    
        0 ,     3 ,     3 ,     5 ,     0 ,     5 ,     5 ,     0 ,
    0 ,     3 ,     3 ,     3 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     3 ,     205,    0 ,     5 ,     0 ,
    0 ,     7 ,     7 ,     8 ,     0 ,     5 ,     0 ,     0 ,    
        7 ,     7 ,     7 ,     5 ,     0 ,     205,    5 ,     0 ,
    0 ,     0 ,     3 ,     0 ,     5 ,     5 ,     0 ,     5 ,    
        7 ,     10,     7 ,     0 ,     5 ,     0 ,     0 ,     0 ,
    0 ,     7 ,     7 ,     0 ,     0 ,     5 ,     5 ,     5 ,    
        7 ,     0 ,     7 ,     0 ,     0 ,     5 ,     5 ,     0 ,
    0 ,     7 ,     7 ,     0 ,     0 ,     0 ,     0 ,     205,   
        0 ,     7 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0   };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 89:

// 89: Forced Fire
//start={20,9};
start[0]=19;
start[1]=8;
lSize[0]=27;
lSize[1]=14;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     1 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     1 ,     0 ,     0 ,     0 ,    
        0 ,     1 ,     1 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     4 ,     4 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     4 ,     4 ,     1 ,     0 ,
    0 ,     0 ,     0 ,     4 ,     4 ,     1 ,     0 ,    
        0 ,     7 ,     0 ,     4 ,     1 ,     12,     0 ,
    0 ,     7 ,     7 ,     0 ,     1 ,     1 ,     0 ,    
        7 ,     7 ,     8 ,     1 ,     1 ,     0 ,     0 ,
    0 ,     7 ,     7 ,     0 ,     1 ,     0 ,     0 ,    
        7 ,     10,     7 ,     8 ,     0 ,     1 ,     0 ,
    0 ,     7 ,     7 ,     0 ,     1 ,     10,     0 ,    
        7 ,     8 ,     7 ,     1 ,     1 ,     8 ,     0 ,
    0 ,     7 ,     7 ,     0 ,     1 ,     1 ,     0 ,    
        7 ,     8 ,     7 ,     3 ,     1 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     10,     1 ,     3 ,    
        0 ,     5 ,     0 ,     3 ,     1 ,     3 ,     0 ,
    0 ,     3 ,     3 ,     1 ,     1 ,     3 ,     3 ,    
        0 ,     0 ,     3 ,     1 ,     3 ,     3 ,     0 ,
    0 ,     3 ,     0 ,     0 ,     3 ,     3 ,     0 ,    
        0 ,     3 ,     0 ,     1 ,     3 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     1 ,     3 ,     0 ,     0 ,    
        0 ,     0 ,     1 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0   };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 90:

// 90: Roundabouts
//start={18,2};
start[0]=17;
start[1]=1;
lSize[0]=21;
lSize[1]=15;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     3 ,     3 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     3 ,     0 ,
        0 ,     0 ,     3 ,     3 ,     3 ,     3 ,     3 ,    
    0 ,     0 ,     0 ,     9 ,     0 ,     1 ,     3 ,     0 ,
        0 ,     0 ,     3 ,     3 ,     0 ,     9 ,     9 ,    
    0 ,     0 ,     9 ,     3 ,     9 ,     9 ,     0 ,     0 ,
        0 ,     1 ,     0 ,     0 ,     9 ,     3 ,     9 ,    
    0 ,     0 ,     0 ,     3 ,     9 ,     3 ,     3 ,     0 ,
        0 ,     9 ,     3 ,     3 ,     0 ,     9 ,     3 ,    
    0 ,     0 ,     0 ,     9 ,     0 ,     3 ,     9 ,     0 ,
        0 ,     3 ,     3 ,     3 ,     0 ,     9 ,     3 ,    
    0 ,     3 ,     3 ,     3 ,     0 ,     3 ,     3 ,     0 ,
        0 ,     9 ,     0 ,     0 ,     0 ,     3 ,     0 ,    
    0 ,     3 ,     3 ,     9 ,     0 ,     0 ,     0 ,     0 ,
        1 ,     3 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     1 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0  };

lSize[2] = lSize[0]*lSize[1]/2 + 1;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 91:

// 91: Rental Boat
//start={9,4};
start[0]=8;
start[1]=3;
lSize[0]=20;
lSize[1]=12;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     4 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     4 ,    
        0 ,     0 ,     0 ,     0 ,     4 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     4 ,    
        0 ,     0 ,     0 ,     11,     0 ,     0 ,
    0 ,     0 ,     1 ,     0 ,     0 ,     0 ,    
        0 ,     1 ,     11,     0 ,     0 ,     0 ,
    0 ,     0 ,     1 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     3 ,     12,     0 ,     0 ,    
        0 ,     0 ,     3 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     3 ,     1 ,     1 ,     0 ,    
        0 ,     0 ,     3 ,     1 ,     0 ,     0 ,
    0 ,     1 ,     0 ,     0 ,     11,     0 ,    
        1 ,     1 ,     0 ,     1 ,     0 ,     0 ,
    0 ,     1 ,     0 ,     0 ,     1 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 92:

// 92: Trampoline Retrieval
//start={10,9};
start[0]=9;
start[1]=8;
lSize[0]=24;
lSize[1]=14;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     3 ,     3 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     3 ,     3 ,    
        0 ,     0 ,     4 ,     0 ,     0 ,     3 ,     0 ,
    0 ,     0 ,     4 ,     4 ,     0 ,     0 ,     3 ,    
        0 ,     0 ,     4 ,     4 ,     12,     3 ,     0 ,
    0 ,     0 ,     4 ,     4 ,     1 ,     3 ,     3 ,    
        0 ,     0 ,     14,     0 ,     0 ,     3 ,     0 ,
    0 ,     0 ,     14,     14,     1 ,     0 ,     0 ,    
        0 ,     14,     0 ,     12,     1 ,     0 ,     0 ,
    0 ,     14,     0 ,     0 ,     0 ,     0 ,     0 ,    
        14,     8 ,     10,     0 ,     1 ,     0 ,     0 ,
    0 ,     8 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        14,     10,     0 ,     0 ,     1 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     6 ,     1 ,     0 ,     3 ,    
        14,     0 ,     6 ,     0 ,     0 ,     3 ,     0 ,
    0 ,     14,     14,     13,     4 ,     3 ,     3 ,    
        0 ,     14,     5 ,     4 ,     0 ,     3 ,     0 ,
    0 ,     0 ,     0 ,     5 ,     0 ,     3 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 93:

// 93: Hunting
//start={21,2};
start[0]=20;
start[1]=1;
lSize[0]=26;
lSize[1]=15;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     9 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     9 ,     9 ,     0 ,     0 ,     0 ,
        0 ,     9 ,     9 ,     0 ,     9 ,     0 ,     0 ,    
    0 ,     0 ,     9 ,     0 ,     9 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     9 ,     7 ,     0 ,     0 ,    
    0 ,     0 ,     9 ,     9 ,     0 ,     4 ,     0 ,     0 ,
        0 ,     0 ,     9 ,     0 ,     4 ,     4 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     4 ,     4 ,     4 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     8 ,     4 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     14,     4 ,     4 ,     0 ,
        0 ,     4 ,     0 ,     7 ,     14,     4 ,     0 ,    
    0 ,     4 ,     4 ,     0 ,     4 ,     4 ,     4 ,     0 ,
        0 ,     0 ,     0 ,     4 ,     14,     4 ,     0 ,    
    0 ,     4 ,     13,     4 ,     7 ,     4 ,     7 ,     0 ,
        0 ,     13,     13,     0 ,     0 ,     9 ,     9 ,    
    0 ,     0 ,     3 ,     0 ,     0 ,     0 ,     9 ,     0 ,
        0 ,     13,     13,     0 ,     9 ,     9 ,     9 ,    
    0 ,     1 ,     13,     4 ,     0 ,     0 ,     9 ,     0 ,
        1 ,     0 ,     0 ,     0 ,     0 ,     9 ,     9 ,    
    0 ,     0 ,     4 ,     4 ,     0 ,     0 ,     9 ,     0 ,
        0 ,     0 ,     4 ,     0 ,     9 ,     9 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     9 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0     };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 94:

// 94: Reversing Space
//start={15,2};
start[0]=14;
start[1]=1;
lSize[0]=19;
lSize[1]=11;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     2 ,     0 ,     3 ,     0 ,    
    0 ,     2 ,     2 ,     3 ,     3 ,     0 ,
        0 ,     11,     0 ,     3 ,     0 ,    
    0 ,     5 ,     5 ,     3 ,     3 ,     0 ,
        0 ,     5 ,     0 ,     5 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     5 ,     0 ,     5 ,     0 ,    
    0 ,     3 ,     3 ,     3 ,     3 ,     0 ,
        5 ,     0 ,     5 ,     0 ,     5 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        5 ,     0 ,     5 ,     0 ,     5 ,    
    0 ,     0 ,     5 ,     5 ,     0 ,     0 ,
        1 ,     0 ,     10,     0 ,     1 ,    
    0 ,     0 ,     5 ,     5 ,     0 ,     0 ,
        0 ,     0 ,     5 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0      };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 95:

// 95: Branching Pathway
//start={8,6};
start[0]=7;
start[1]=5;
lSize[0]=22;
lSize[1]=12;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     3 ,     3 ,     0 ,     0 ,    
        0 ,     0 ,     3 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     6 ,     6 ,     0 ,     0 ,    
        5 ,     0 ,     1 ,     0 ,     0 ,     0 ,
    0 ,     5 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     5 ,     1 ,     5 ,     5 ,     0 ,
    0 ,     0 ,     1 ,     201,    5 ,     5 ,    
        8 ,     0 ,     0 ,     0 ,     5 ,     0 ,
    0 ,     0 ,     5 ,     5 ,     0 ,     0 ,    
        1 ,     0 ,     0 ,     0 ,     5 ,     0 ,
    0 ,     0 ,     5 ,     5 ,     0 ,     0 ,    
        1 ,     0 ,     0 ,     5 ,     0 ,     0 ,
    0 ,     0 ,     8 ,     0 ,     0 ,     0 ,    
        1 ,     0 ,     0 ,     5 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     5 ,     0 ,     0 ,    
        201,    0 ,     8 ,     0 ,     0 ,     0 ,
    0 ,     1 ,     5 ,     0 ,     0 ,     0 ,    
        0 ,     5 ,     5 ,     0 ,     0 ,     0 ,
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
        0 ,     0 ,     0 ,     0 ,     0 ,     0   };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 96:

// 96: Beware Feedback Loops
//start={13,4};
start[0]=12;
start[1]=3;
lSize[0]=28;
lSize[1]=15;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     9 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     9 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     9 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     1 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        9 ,     0 ,     1 ,     0 ,     0 ,     0 ,     9 ,    
    0 ,     0 ,     1 ,     9 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     1 ,     0 ,     1 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     1 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     7 ,     0 ,     11,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
        9 ,     9 ,     0 ,     3 ,     11,     11,     9 ,    
    0 ,     9 ,     0 ,     0 ,     0 ,     3 ,     0 ,     0 ,
        0 ,     3 ,     0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     9 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     7 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     0 ,     9 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0    };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 97:

// 97: Laser Surgery
//start={11,2};
start[0]=10;
start[1]=1;
lSize[0]=27;
lSize[1]=11;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     4 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     3 ,     3 ,     0 ,     0 ,
        0 ,     3 ,     9 ,     3 ,     0 ,    
    0 ,     3 ,     3 ,     4 ,     3 ,     0 ,
        3 ,     9 ,     3 ,     9 ,     3 ,    
    0 ,     3 ,     3 ,     3 ,     3 ,     0 ,
        3 ,     4 ,     3 ,     3 ,     3 ,    
    0 ,     3 ,     3 ,     3 ,     3 ,     0 ,
        3 ,     9 ,     3 ,     9 ,     3 ,    
    0 ,     3 ,     3 ,     3 ,     3 ,     0 ,
        0 ,     3 ,     9 ,     3 ,     0 ,    
    0 ,     0 ,     3 ,     3 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     3 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     7 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     9 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     4 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0       };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 98:

// 98: Another Mountain
//start={12,4};
start[0]=11;
start[1]=3;
lSize[0]=23;
lSize[1]=13;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     4 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     4 ,     4 ,     0 ,     0 ,     0 ,    
    0 ,     4 ,     4 ,     4 ,     0 ,     0 ,     0 ,
        4 ,     4 ,     4 ,     4 ,     0 ,     0 ,    
    0 ,     4 ,     3 ,     4 ,     4 ,     0 ,     0 ,
        4 ,     3 ,     3 ,     4 ,     4 ,     0 ,    
    0 ,     4 ,     4 ,     3 ,     4 ,     4 ,     0 ,
        4 ,     3 ,     8 ,     3 ,     4 ,     0 ,    
    0 ,     4 ,     4 ,     4 ,     3 ,     4 ,     0 ,
        4 ,     3 ,     4 ,     4 ,     4 ,     1 ,    
    0 ,     4 ,     8 ,     8 ,     3 ,     4 ,     0 ,
        4 ,     3 ,     4 ,     3 ,     4 ,     0 ,    
    0 ,     4 ,     4 ,     3 ,     4 ,     4 ,     0 ,
        4 ,     3 ,     3 ,     4 ,     4 ,     0 ,    
    0 ,     4 ,     3 ,     4 ,     4 ,     0 ,     0 ,
        4 ,     4 ,     4 ,     4 ,     0 ,     0 ,    
    0 ,     4 ,     4 ,     4 ,     0 ,     0 ,     0 ,
        0 ,     4 ,     4 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     4 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0   };

lSize[2] = lSize[0]*lSize[1]/2 + 1;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 99:

// 99: Inversion
// this level needs extra padding on top
//start={6,2};
start[0]=5;
start[1]=1;
lSize[0]=12;
lSize[1]=11;

{
unsigned char levelTemp[]={
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     13,     11,     0 ,     0 ,     0 ,
        3 ,     3 ,     11,     0 ,     0 ,    
    0 ,     0 ,     3 ,     11,     0 ,     0 ,
        0 ,     0 ,     0 ,     11,     0 ,    
    0 ,     0 ,     0 ,     0 ,     4 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     13,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0         };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
case 100:

// 100: Outposts
//start={9,8};
start[0]=8;
start[1]=7;
lSize[0]=27;
lSize[1]=15;

{
unsigned char levelTemp[]={
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        1 ,     0 ,     0 ,     0 ,     0 ,     0 ,     1 ,    
    0 ,     12,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        12,     0 ,     0 ,     0 ,     0 ,     0 ,     12,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     12,     12,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     1 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     8 ,     8 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     3 ,     3 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     3 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     1 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     12,     12,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        12,     0 ,     0 ,     0 ,     0 ,     0 ,     12,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     12,     0 ,
        1 ,     0 ,     0 ,     0 ,     0 ,     0 ,     1 ,    
    0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0 ,
        0 ,     0 ,     0 ,     0 ,     0 ,     0 ,     0         };

lSize[2] = lSize[0]*lSize[1]/2;
for(int i=0; i<lSize[2]; i++)
  l[i] = levelTemp[i];
}

break;
}

}
